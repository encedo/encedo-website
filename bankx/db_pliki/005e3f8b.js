;var dbnextCardsModule=angular.module("dbnext-cards",["ebanking-shared"]).config(["translationsLoaderProvider","$urlRouterProvider","guiProvider","pathServiceProvider","stateServiceProvider","resourceViewServiceProvider",function(a,b,c,d,e,f){var g="de",h="dbnext",i="cards",j=h+"."+i,k=h+"-"+i,l=g+"."+i;webComponentRegistry[k].simpleName=i,webComponentRegistry[k].startState=l+".content",c.registerElement(k),c.registerElement(k,"product"),c.registerElement(k,"menu");var m={resourceType:"card",linkTextKey:"db.cards.external_link.details",linkEntryState:l+".details"};f.registerResourceView(m),a.addTranslationsPath(d.generateRootPath(k)+"/i18n/messages_{{language}}.json"),b.when("/"+g+"/"+i,"/"+g+"/"+i+"/content"),e.state(g,{url:"/"+g,"abstract":!0,template:"<div ui-view></div>"}).state(l,{url:"/"+i,"abstract":!0,templateUrl:d.generateTemplatePath(k)+"/views/cardsView.html",controller:j+".ViewController"}).state(l+".content",{url:"/content",templateUrl:d.generateTemplatePath(k)+"/views/cardsContent.html",controller:j+".ContentController"}).state(l+".details",{url:"/:id/details",templateUrl:d.generateTemplatePath(k)+"/views/cardsDetails.html",controller:j+".DetailsController",previous:[l+".content",g+".calendar.details"]}).state(l+".transactions",{url:"/transactions","abstract":!0,template:"<div ui-view></div>"}).state(l+".transactions.list",{url:"/:id/list",templateUrl:d.generateTemplatePath(k)+"/views/cardsTransactionsList.html",controller:j+".TransactionsController"}).state(l+".transactions.details",{url:"/:id/details",templateUrl:d.generateTemplatePath(k)+"/views/cardsTransactionDetails.html",controller:j+".TransactionDetailsController",previous:[l+".transactions.list"]}).state(l+".repayment",{url:"/repayment","abstract":!0,templateUrl:d.generateTemplatePath(k)+"/views/cardsRepayment.html"}).state(l+".repayment.step1",{url:"/form",templateUrl:d.generateTemplatePath(k)+"/views/cardsRepaymentStep1.html",controller:j+".RepaymentStep1Controller",previous:[l+".content",l+".repayment.step2"]}).state(l+".repayment.step2",{url:"/accept",templateUrl:d.generateTemplatePath(k)+"/views/cardsRepaymentStep2.html",controller:j+".RepaymentStep2Controller",previous:[l+".repayment.step1"]}).state(l+".statements",{url:"/:id/statements",templateUrl:d.generateTemplatePath(k)+"/views/cardStatements.html",controller:j+".StatementsController",previous:[l+".content"]}).state(l+".newPin",{url:"/:id/newPin",templateUrl:d.generateTemplatePath(k)+"/views/cardsChangePin.html",controller:j+".CardsChangePinController",previous:[l+".content",l+".activate.step2"]}).state(l+".activate",{url:"/activate","abstract":!0,templateUrl:d.generateTemplatePath(k)+"/views/cardsActivate.html"}).state(l+".activate.step1",{url:"/form",templateUrl:d.generateTemplatePath(k)+"/views/cardsActivateStep1.html",controller:j+".ActivateStep1Controller",previous:[l+".content",l+".activate.step2"]}).state(l+".activate.step2",{url:"/accept",templateUrl:d.generateTemplatePath(k)+"/views/cardsActivateStep2.html",controller:j+".ActivateStep2Controller",previous:[l+".activate.step1"]})}]).run(["$rootScope","$state",function(a,b){a.$on("$stateChangeStart",function(a,c,d,e,f){var g=e.name,h=c.name;""!=g&&angular.isDefined(c.previous)&&-1==c.previous.indexOf(g)&&(a.preventDefault(),-1!=h.indexOf(webComponentRegistry["dbnext-cards"].simpleName)&&b.go(webComponentRegistry["dbnext-cards"].startState))})}]);dbnextCardsModule.controller("dbnext.cards.StatementsController",["$scope","$window","$sce","translate","viewStateService","$filter","$timeout","initialState","$state","searchWrapperService","statementFilterCriteria","cardStatementsService","$log","gate","userService","httpService",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){function q(){var a=window.navigator.userAgent,b=a.indexOf("MSIE ");return!!(b>0||a.match(/Trident.*rv\:11/))}if(!angular.isDefined(h))return void i.go("de.cards.content");a.card=h;var r={cardId:a.card.id,pageSize:3};a.cardStatementsPromise=l.search(r).then(function(b){a.statementsList=b,s(a.statementsList),a.loading=!1},function(b){m.error("Error getting card statements"),a.statementsList=[]});var s=function(b){angular.forEach(b.content,function(b){var c={statementId:b.statementId,dateFrom:b.dateFrom,dateTo:b.dateTo,cardId:a.card.id};n.getHref("self",b).then(function(a){o.getIdentityDetails().then(function(d){b.link=p.appContext+a+p.serializeParams(angular.extend({customerId:d.id,accessProfileId:d.accessProfileId},c),!0),b.target=q()?"":"_blank"})})})}}]),dbnextCardsModule.controller("dbnext.cards.CardsChangePinController",["initialState","$scope","formService","$rootScope","$modal","$location","$timeout","$log","$filter","$state","gate","cardsService","translate","language","pathService","$anchorScroll","cardStatementDistributionTypeService","notificationService","domService",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){if(p.yOffset=150,b.$parent.selected.subtitle="Nadanie kodu PIN",b.step="step1",!angular.isDefined(a))return void j.go("de.cards.content");b.card=a,b.cardDetails=null,b.changePinModel={},b.numpad={show:!1};var t=function(){b.step="step2"};b.tooltip={icon:"eb-icon-tooltip eb-dbnext-theme",header:m.property("db.cards.change_pin.row.new_pin.tooltip.header"),content:m.property("db.cards.change_pin.row.new_pin.tooltip.content"),side:"top",handler:"click"},b.clicked={};var u=function(a){var c=s.getSelectionStart(cardChangePinForm[a]),d=s.getSelectionEnd(cardChangePinForm[a]),e=[c,d];b.numpad.caret=e,b.numpad.name=a};b.setNumpadModel=function(a){b.numpad.show=b.numpad.show&&b.numpad.name!=a?b.numpad.show:!b.numpad.show,u(a)},b.mouseLeave=function(a){b.clicked[a]&&u(a)},b.mouseUp=function(a){angular.forEach(b.clicked,function(a,c){b.clicked[c]=!1}),u(a)},b.submit=function(a){return console.log(a),a.$valid?l.createCardChangePin(b.cardDetails,{newPin:b.changePinModel.newPin}).then(function(c){b.cardDispositionId=c.content,t(a)},function(a){"error"==a.type&&"notAvailable"==a.subType&&r.showTopUpRejectedDialog({text:{title:"db.cards.new.step1.error.title",message:"db.cards.new.step1.error.message",confirm:"db.cards.new.step1.error.confirm"}})}):void c.dirtyFields(a)},b.onChange=function(a,b){null!=b&&null!=b[a]&&b[a].$setValidity("minlength",!0)},b.onBlur=function(a,c){null!=c&&null!=c[a]&&(null!=b.changePinModel.newPin&&b.changePinModel.newPin.length<4?c[a].$setValidity("minlength",!1):c[a].$setValidity("minlength",!0)),c[a].$validate()},b.backToStep1=function(){b.step="step1",b.changePinModel={}},b.submitStep2=function(){return l.changeCardPin(b.cardDetails,{newPin:b.changePinModel.newPin,cardDispositionId:b.cardDispositionId}).then(function(a){j.go("de.cards.content"),r.showCardPinChangedDialog({text:{title:"db.cards.change_pin.step2.confirmation.title."+b.cardDetails.cardType,confirmationText:"db.cards.change_pin.step2.confirmation.confirmation_text",confirmationText2:"db.cards.change_pin.step2.confirmation.confirmation_text2",confirmationText3:"db.cards.change_pin.step2.confirmation.confirmation_text3",cardNo:b.cardDetails.cardNo,back:"db.cards.change_pin.step2.confirmation.back_text"},state:{dashboard:"de.dashboard"}})},function(a){j.go("de.cards.content"),r.showCardPinChangedErrorDialog({text:{title:"db.cards.change_pin.step2.confirmation.error.title."+b.cardDetails.cardType,confirmationText:"db.cards.change_pin.step2.confirmation.error.confirmation_text",confirmationText2:"db.cards.change_pin.step2.confirmation.error.confirmation_text2",back:"db.cards.change_pin.step2.confirmation.error.back_text",cardNo:b.cardDetails.cardNo},state:{dashboard:"de.dashboard"}})})};var v=function(){b.cardsDetailsPromise=l.self(b.card.id,{lang:n.get()}).then(function(a){b.cardDetails=a},function(a){h.error("Error getting cards details"),b.cardDetails=null})};v(),b.getLayoutsPath=function(){return o.generateTemplatePath("dbnext-cards")},b.getCardDescription=function(){var a=b.card.name;return"CREDIT"==b.cardDetails.cardType&&null!=b.cardDetails.cardSubType&&(a+=" - "+m.property("db.cards.details.credit_card.subtype."+b.cardDetails.cardSubType)),a},b.getCardChangeHeader=function(a){return a?"db.cards.change_pin.section_header.header"+a+"."+b.cardDetails.cardType:"db.cards.change_pin.section_header.header."+b.cardDetails.cardType}}]),dbnextCardsModule.controller("dbnext.cards.ContentController",["$scope","$rootScope","$location","$timeout","$log","$filter","$state","cardsService","gate","searchWrapperService","cardTransactionFilterCriteria","cardTransactionService","viewStateService",function(a,b,c,d,e,f,g,h,i,j,k,l,m){a.$parent.selected.subtitle="Karty",a.filterOptions={searchFilter:""},a.cardList=[],m.resetAllStates();var n=function(){a.cardList.content=a.cardList.content.map(function(a){return angular.extend(a,j.wrapCardFields(a))})};a.cardListPromise=h.get({pageSize:1e4}).then(function(b){a.cardList=b,n(),o()},function(b){e.error("Error getting cards list"),a.cardList=[]}),a.blockadesShortPromises={},a.getBlockadesShort=function(b,c){if(null==b.blockadesShort){var d=k.getTransactionFilterInitValues(b.lastOperationDate,!0);d.pageNumber=1,d.pageSize=3,d.limit="list",d.cardId=b.id,a.blockadesShortPromises[c]=l.search(d).then(function(a){b.blockadesShort=a.content})}},a.$watch("filterOptions.searchFilter",function(a,b){o()});var o=function(){if(null!=a.cardList){a.cardList.summary=[];var b=f("filter")(a.cardList.content,{wrappedText:a.filterOptions.searchFilter});a.cardList.summary.push(b)}}}]),dbnextCardsModule.controller("dbnext.cards.DetailsController",["initialState","$scope","formService","$rootScope","$modal","$timeout","$log","$filter","$state","gate","cardsService","translate","language","pathService","cardStatementDistributionTypeService","notificationService",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){if(b.$parent.selected.subtitle="Szczegóły karty",!angular.isDefined(a))return void i.go("de.cards.content");b.card=a,b.cardDetails=null,b.limitCollapsed=!0,b.repaymentCollapsed=!0;var q=function(){b.cardsDetailsPromise=k.self(b.card.id,{lang:m.get()}).then(function(a){b.cardDetails=a},function(a){g.error("Error getting cards details"),b.cardDetails=null})};q(),b.getLayoutsPath=function(){return n.generateTemplatePath("dbnext-cards")},b.handleCollapse=function(a,d){"limit"==a?(b.limitCollapsed=!b.limitCollapsed,b.limitCollapsed||c.scrollTo("limitSectionId",150)):(b.repaymentCollapsed=!b.repaymentCollapsed,b.repaymentCollapsed||c.scrollTo("repaymentSectionId",150))},b.changeStatementDistributionTypeModal=function(a){var d={language:m.get()};o.search(d).then(function(f){var g=e.open({templateUrl:b.getLayoutsPath()+"/views/cardStatementDistibutionChangeModal.html",backdropClass:"always-on",controller:["$scope",function(b){b.cardStatementDistributionTypes=f.content,b.card=a,b.$watch("cardStmtDistributionType.key",function(a,c){null!=b.cardStmtDistributionType&&b.cardStmtDistributionType.description!=b.card.cardDetails.statementDistributionDesc&&b.statementDistributionForm.statementType.$setValidity("same",!0)}),b.title=l.property("db.cards.statementdistribution.modal.title"),angular.extend(b,{close:function(){g.dismiss()},changeStatementDistributionType:function(a){null!=b.cardStmtDistributionType&&b.cardStmtDistributionType.description==b.card.cardDetails.statementDistributionDesc&&b.statementDistributionForm.statementType.$setValidity("same",!1),a.$valid?(d={nrbNumber:b.card.accountNo,distributionTypeKey:b.cardStmtDistributionType.key},k.changeStatementDistributionType(d,b.card).then(function(){p.showStatementDistributionChangedDialog({text:{message:"db.cards.statementdistribution.modal.confirmation.message",title:"db.cards.statementdistribution.modal.confirmation.title",back:"db.cards.statementdistribution.modal.confirmation.back"},state:{dashboard:"de.dashboard"}}),q(),g.dismiss()})):c.dirtyFields(a)},selectStmtDistType:function(a,c){b.cardStmtDistributionType=a}})}]})})}}]),dbnextCardsModule.controller("dbnext.cards.RepaymentStep1Controller",["initialState","$stateParams","$scope","$rootScope","$location","$timeout","$log","$filter","$state","gate","userService","cardsService","translate","viewStateService","formService","accountsService","notificationService","$q",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){function s(){var a=[],b=c.repayment.description;return b.length<=35?a[0]=b:(a[0]=b.substring(0,35),b.length>35&&(a[1]=b.substring(35,70)),b.length>70&&(a[2]=b.substring(70,105)),b.length>105&&(a[3]=b.substring(105,140))),l.repaymentCreditCard(c.card,{remitterId:c.repayment.remitterId,remitterAccountId:c.repayment.accountFrom,amount:c.repayment.amount,currency:c.repayment.currency,transactionDate:c.repayment.paymentDate,intent:c.repayment.intent,description:a}).then(function(a){return c.repayment.dispositionId=a.content,c.repayment.accountFromObject=p.getAccountById(c.repayment.accountFrom),n.resetInitialState(i.current.name),n.setInitialState(i.current.name,c.repayment),n.setInitialState("de.cards.repayment.step2",c.repayment),i.go("de.cards.repayment.step2"),a},function(a){return"error"==a.type&&"notAvailable"==a.subType&&q.showTopUpRejectedDialog({text:{title:"db.cards.new.step1.error.title",message:"db.cards.new.step1.error.message",confirm:"db.cards.new.step1.error.confirm"}}),r.reject(a)})}c.$parent.selected.subtitle="Spłata karty",c.card=null,c.repayment={},c.repayment.paymentDate=new Date,c.backObject=!1;var t=n.getInitialState(i.current.name);console.log("paymentFormInitialState: ",t),null!=t&&(null!=t.cardSelected?(c.repayment=t,c.repayment.intent="realize",c.backObject=!0,c.repayment.paymentDate=new Date(c.repayment.paymentDate),c.repayment.diffCurrencyConfirmation=!1):(c.backObject=!1,c.repayment.cardSelected=a,c.repayment.currency=c.repayment.cardSelected.currency)),c.userDetails={},k.getUserDetails().then(function(a){c.userDetails=a}),c.card=c.repayment.cardSelected,c.repayment.description=m.property("db.cards.repayment.row.title.content")+" "+h("maskCardNrbFilter")(c.card.cardNo),c.paymentTypesArray={},c.paymentTypesArray=[{label:m.property("db.cards.repayment.last.cycle.debt"),value:1,repayAmount:c.card.cardDetails.debtPrevSettlmnt,currency:c.card.currency},{label:m.property("db.cards.repayment.last.last.min.debt"),value:2,repayAmount:c.card.cardDetails.minDebtPrevSettlmnt,currency:c.card.currency},{label:m.property("db.cards.repayment.last.any.amount"),value:3,repayAmount:null,currency:c.card.currency}],c.backObject||(c.repayment.paymentType=c.paymentTypesArray[2]),f(function(){c.$watch("repayment.accountFrom",function(a,b){c.repaymentForm.remitterAccountId&&(c.repaymentForm.diffCurrencyConfirmation||c.repayment.diffCurrencyConfirmation)&&(c.repaymentForm.remitterAccountId.$pristine&&c.repaymentForm.diffCurrencyConfirmation.$pristine||(c.repayment.diffCurrencyConfirmation=!1)),null!=a&&a.length>0&&p.get(a,{fields:"ownersList"}).then(function(a){var b=a.ownersList.filter(function(a,b,c){return"OWNER"===a.relationType});null!=b&&1===b.length?c.repayment.remitterId=b[0].customerId:c.repayment.remitterId=c.userDetails.userIdentityId.id})})}),c.$watch("repayment.paymentType",function(a,b){c.repayment.paymentType=a,3==a.value?(c.disableAmount=!1,c.backObject&&b==a||(c.repayment.amount=a.repayAmount)):2==a.value?(c.disableAmount=!0,c.repayment.amount=a.repayAmount):(c.disableAmount=!0,c.repayment.amount=a.repayAmount)}),c.submit=function(a){return angular.element(document.querySelector(":focus")).triggerHandler("blur"),a.$valid?s():(o.dirtyFields(a.$valid),r.reject(!1))}}]),dbnextCardsModule.controller("dbnext.cards.RepaymentStep2Controller",["initialState","$stateParams","$scope","$rootScope","$location","$timeout","$log","$filter","$state","gate","cardsService","translate","viewStateService","notificationService","accountsService","transferService","paymentsService",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){c.isCartIntent=!1;var a=m.getInitialState(i.current.name);c.card=a.cardSelected,c.paymentType=a.paymentType,"add_to_cart"===a.intent&&(c.isCartIntent=!0),console.log("initialState: ",a),c.cardPromise=q.get(a.dispositionId).then(function(a){c.repaymentDetails=a,c.exchange=c.repaymentDetails.accountCurrency!=c.repaymentDetails.currency,"INTRODUCED"!=c.repaymentDetails.status&&i.go("de.cards.content")}),c.getAccountNumber=function(a){return o.getAccountById(a).accountNo},c.params={fields:"id,status"},c.accept=function(){return console.log("transferId: ",c.repaymentDetails.id),q.action({transferId:c.repaymentDetails.id},"realize",c.repaymentDetails).then(function(){return q.get(c.repaymentDetails.id,c.params).then(function(a){m.resetInitialState("de.cards.repayment.step2"),i.go("de.cards.content"),n.showCardRepaymenttAcceptedDialog({text:{title:"db.cards.modal.title",message:"db.cards.modal.message",confirmAction:"db.cards.modal.confirm_action"},state:{dashboard:"de.dashboard"}})})},function(a){})},c.save=function(){return q.action({},"save_in_cart",c.repaymentDetails).then(function(){m.resetAllStates(),n.showDispositionBasketInsertDialog({text:{},state:{dashboard:"de.dashboard"}})})},c.change=function(a){return i.go("de.cards.repayment.step1")},c.getPaymentTypeKey=function(a){return console.log("getPaymentTypeKey ->",a),null!=a?paymentType.getPaymentTypeKey(a):void 0}}]),dbnextCardsModule.controller("dbnext.cards.TransactionDetailsController",["$scope","$log","initialState","pathService",function(a,b,c,d){a.pathPrefix=d.generateTemplatePath("dbnext-cards"),null!=c&&(a.card=c,a.details=c.transaction)}]),dbnextCardsModule.controller("dbnext.cards.TransactionsController",["initialState","$scope","$rootScope","$timeout","$log","$filter","$state","viewStateService","gate","cardsService","cardTransactionFilterCriteria","formService","cardTransactionService","userService",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n){if(b.$parent.selected.subtitle="Operacje",b.showFilter=!1,b.showClearFilter=!1,!angular.isDefined(a))return void g.go("de.cards.content");b.card=a,b.cardTransactionPromise=null,b.showFilterWindow=function(){b.showFilter=!b.showFilter},b.clearFilter=function(){b.filterParams={},b.filterParams=k.getTransactionFilterInitValues(b.card.lastOperationDate,!0),b.filterParams.isClearing=!0,b.showClearFilter=!1},angular.isDefined(h.getInitialState(g.current.name))&&(b.filterParams=h.getFormData("cardTransactionFilterParams")),null==b.filterParams&&b.clearFilter();var o=function(a){for(var b=angular.copy(a),c=0;c<a.length;c++)a[c]instanceof Date&&(b[c]=f("date")(a[c],"yyyy-MM-dd"));return b},p=k.getTransactionFilterInitValues(b.card.lastOperationDate,!0);p=[p.dateFrom,p.dateTo,p.operationType,p.periodCount,p.periodDefinitionType,p.periodUnitType,p.operationTitle,p.cardType,p.operationAmountFrom,p.operationAmountTo,p.operationType,p.dateType,p.sortType,p.creditCardType],b.$watchGroup(["filterParams.dateFrom","filterParams.dateTo","filterParams.operationType","filterParams.periodCount","filterParams.periodDefinitionType","filterParams.periodUnitType","filterParams.operationTitle","filterParams.cardType","filterParams.operationAmountFrom","filterParams.operationAmountTo","filterParams.operationType","filterParams.dateType","filterParams.sortType","filterParams.creditCardType"],function(a,c){b.filterParams.isClearing=!1,JSON.stringify(o(a))===JSON.stringify(p)?b.showClearFilter=!1:b.showClearFilter=!0},!0),b.transactionList=null;var q=function(a){if("last"==a.periodDefinitionType&&"days"==a.periodUnitType){var b=new Date;return b.setDate(b.getDate()-a.periodCount),b}return a.dateFrom},r=function(a){return"last"==a.periodDefinitionType&&"days"==a.periodUnitType?new Date:a.dateTo};b.submit=function(a,c,d){if(angular.isDefined(a)){b.loading=!0,console.log("parametry w submit",a,c,d);var f={cardId:b.card.id,sortDirection:c.sortDirection,operationType:c.operationType,sortType:c.sortType,creditCardType:c.creditCardType,limit:c.limit,operationTitle:c.operationTitle,dateFrom:q(c),dateTo:r(c),pageNumber:c.pageNumber,pageSize:c.pageSize};return isNaN(c.operationAmountFrom)||(f.operationAmountFrom=c.operationAmountFrom),isNaN(c.operationAmountTo)||(f.operationAmountTo=c.operationAmountTo),b.cardTransactionPromise=m.relationSearch(a,f,d).then(function(a){b.transactionList=a,b.filterParams.pageNumber=a.pageNumber,b.filterParams.pageSize=a.pageSize,l.scrollTo("cardTransactionListId"),h.appendFormData("cardTransactionFilterParams",b.filterParams)},function(a){e.error("Error getting cards transaction"),b.transactionList=[]}),b.cardTransactionPromise}};var s=angular.extend({cardId:b.card.id},b.filterParams);b.cardTransactionPromise=m.search(s).then(function(a){b.transactionList=a,b.loading=!1,b.filterParams.pageNumber=a.pageNumber,b.filterParams.pageSize=a.pageSize,h.appendFormData("cardTransactionFilterParams",b.filterParams)},function(a){e.error("Error getting cards transaction"),b.transactionList=[]}),b.getDetails=function(a){h.setInitialState("de.cards.transactions.details",{cardId:b.card.id,transaction:a,cardType:b.card.cardType}),g.go("de.cards.transactions.details")}}]),dbnextCardsModule.controller("dbnext.cards.ViewController",["$scope","userService","gate","cardsService",function(a,b,c,d){a.selected={},a.cardListPromise=d.get({pageSize:1e4}).then(function(b){a.cardList=b})}]),dbnextCardsModule.controller("dbnext.cards.ActivateStep1Controller",["initialState","$stateParams","$scope","$rootScope","$location","$timeout","$log","$filter","$state","gate","userService","cardsService","translate","viewStateService","formService","accountsService","notificationService",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){function r(){return c.activation.card=c.card,l.createActivationCard(c.card,{cardId:c.card.id,partCardNo:c.activation.partCardNumber}).then(function(a){c.activation.card.cardDispositionId=a.content,n.resetInitialState(i.current.name),n.setInitialState(i.current.name,c.activation),n.setInitialState("de.cards.activate.step2",c.activation),i.go("de.cards.activate.step2")},function(a){"error"==a.type&&"notAvailable"==a.subType&&q.showTopUpRejectedDialog({text:{title:"db.cards.new.step1.error.title",message:"db.cards.new.step1.error.message",confirm:"db.cards.new.step1.error.confirm"}})})}c.$parent.selected.subtitle="Sp�ata karty",c.card=null,c.activation={},c.backObject=!1,c.tooltip={icon:"eb-icon-tooltip eb-dbnext-theme",header:m.property("db.cards.activate.row.card_no.tooltip.header"),content:m.property("db.cards.activate.row.card_no.tooltip.content"),side:"top",handler:"click"};var s=n.getInitialState(i.current.name);console.log("activationFormInitialState: ",s),null!=s&&(null!=s.cardSelected?(c.activation=s,c.backObject=!0,c.activation.clientConfirmation=!1):(c.backObject=!1,c.activation.cardSelected=a)),c.userDetails={},k.getUserDetails().then(function(a){c.userDetails=a}),c.card=c.activation.cardSelected,c.submit=function(a){return angular.element(document.querySelector(":focus")).triggerHandler("blur"),a.$valid?r():void o.dirtyFields(a)},c.getCardDescription=function(){var a=c.card.name;return"CREDIT"==c.card.cardType&&null!=c.card.cardSubType&&(a+=" - "+m.property("db.cards.details.credit_card.subtype."+c.card.cardSubType)),a}}]),dbnextCardsModule.controller("dbnext.cards.ActivateStep2Controller",["initialState","$stateParams","$scope","$rootScope","$location","$timeout","$log","$filter","$state","gate","cardsService","translate","viewStateService","notificationService","accountsService","transferService","paymentsService",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){var a=m.getInitialState(i.current.name);c.card=a.card,c.activation=a,console.log("initialState: ",a),c.accept=function(){return console.log("cardId: ",c.activation.card.id),k.activateCard(c.card,{cardId:c.activation.card.id,cardDispositionId:c.activation.card.cardDispositionId}).then(function(a){m.resetInitialState("de.cards.activate.step2"),i.go("de.cards.content"),n.showCardActivatedDialog({text:{title:"db.cards.activate.step2.confirmation.title."+c.card.cardType,confirmationText:"db.cards.activate.step2.confirmation.confirmation_text",confirmationText2:"db.cards.activate.step2.confirmation.confirmation_text2",confirmationText3:"db.cards.activate.step2.confirmation.confirmation_text3",cardNo:c.card.cardNo,back:"db.cards.activate.step2.confirmation.back_text",newPin:"db.cards.content.list.options.change_pin"},state:{dashboard:"de.dashboard"},object:{card:c.card}})},function(a){i.go("de.cards.content"),n.showCardActivatedErrorDialog({text:{title:"db.cards.activate.step2.confirmation.title."+c.card.cardType,confirmationText:"db.cards.activate.step2.confirmation.error.confirmation_text",confirmationText2:"db.cards.activate.step2.confirmation.error.confirmation_text2",back:"db.cards.activate.step2.confirmation.back_text",cardNo:c.card.cardNo},state:{dashboard:"de.dashboard"}})})},c.change=function(a){return i.go("de.cards.activate.step1")},c.getCardDescription=function(){var a=c.card.name;return"CREDIT"==c.card.cardType&&null!=c.card.cardSubType&&(a+=" - "+l.property("db.cards.details.credit_card.subtype."+c.card.cardSubType)),a}}]),dbnextCardsModule.directive("dbCrdActivateNumberInput",["pathService","translate","ebTheming","domService",function(a,b,c,d){return{restrict:"EA",replace:!1,require:"^ngModel",templateUrl:a.generateTemplatePath("dbnext-cards")+"/directives/dbCrdActivateNumberInput/dbCrdActivateNumberInput.html",link:function(a,b,c,e){var f=b.find("input"),g=new RegExp("^[0-9]{1,9}$"),h="";a.placeholder=c.placeholder,e.$render=function(){a.$evalAsync(function(){f[0].value=e.$viewValue||""})},f.on("input",function(){g.test(this.value)||""==this.value||(this.value=h),null!=this.value&&this.value.length>6&&(this.value=this.value.substring(0,6)),d.isIE()&&h==this.value||(h=this.value,e.$setViewValue(this.value))}),a.$on("$destroy",function(){f.off()})}}}]),dbnextCardsModule.directive("dbCrdRepaymentTypeSelect",["$compile","ebTheming","accountTransactionType","commonService","$rootScope","$timeout","$log","$http","$templateCache","pathService",function(a,b,c,d,e,f,g,h,i,j){return{restrict:"EA",replace:!0,transclude:!0,scope:{ngModel:"=",items:"="},templateUrl:j.generateTemplatePath("dbnext-cards")+"/directives/dbCrdRepaymentTypeSelect/dbCrdRepaymentTypeSelect.html",link:function(a,b,c){}}}]),dbnextCardsModule.directive("dbCrdStatementFilter",["ebTheming","pathService","formService",function(a,b,c){return{restrict:"EA",replace:!0,transclude:!0,scope:{ngModel:"=",disabled:"=",context:"=",callback:"&"},templateUrl:b.generateTemplatePath("dbnext-cards")+"/directives/dbCrdStatementFilter/dbCrdStatementFilter.html",link:function(b,d,e){a.applyTheme(d),b.submitFilter=function(a){return a.$valid?(c.scrollTo("cardStatementsListId"),b.ngModel.pageNumber=1,b.callback({ctx:b.context,params:b.ngModel})):void 0}}}}]),dbnextCardsModule.directive("dbCrdTransactionFilter",["$compile","ebTheming","accountTransactionType","commonService","$rootScope","$timeout","$log","$http","$templateCache","pathService","cardsService","$location","$state","$filter","$window","$anchorScroll","cardTransactionFilterCriteria",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){return{restrict:"EA",replace:!0,transclude:!0,scope:{ngModel:"=",context:"=",callback:"&",selectedCard:"="},templateUrl:j.generateTemplatePath("dbnext-cards")+"/directives/dbCrdTransactionFilter/dbCrdTransactionFilter.html",link:function(a,c,d){b.applyTheme(c),a.sortTypeAray=q.getSortTypeOptionsArray(),a.cardOperationTypeArray=q.getCardOperationsTypeOptions(),null!=a.selectedCard.cardSubType&&"EXTRA"==a.selectedCard.cardSubType?a.creditCardTypeOptionsArray=q.getCreditCardTypeExtraOptions():a.creditCardTypeOptionsArray=q.getCreditCardTypeMainOptions(),a.submitFilter=function(b){return b.$valid?(a.ngModel.pageNumber=1,angular.isUndefined(a.ngModel.operationAmountTo)&&(a.ngModel.operationAmountTo=b.amountTo.$modelValue),angular.isUndefined(a.ngModel.operationAmountFrom)&&(a.ngModel.operationAmountFrom=b.amountFrom.$modelValue),isNaN(a.ngModel.operationAmountTo)&&(a.ngModel.operationAmountTo=void 0),isNaN(a.ngModel.operationAmountFrom)&&(a.ngModel.operationAmountFrom=void 0),a.callback({ctx:a.context,params:a.ngModel})):void 0},a.formatAmount=function(a){}}}}]),dbnextCardsModule.controller("dbnext.cards.MenuElementController",["$scope","$rootScope",function(a,b){a.isStateActive=b.isStateActive}]),dbnextCardsModule.controller("dbnext.cards.ProductElementController",["$scope","$state","viewStateService","cardsService","$log","events","$q",function(a,b,c,d,e,f,g){var h=function(a,b){var c=0;return b>0&&(c=Math.abs(a)/b*100),{width:c+"%"}},i={sortOrder:"FIRST_MAIN_CARD_SORT_BY_LIMIT",cardType:"CREDIT",pageNumber:1,pageSize:1};a.goTo=function(){a.cardProduct&&(c.setInitialState("de.cards.transactions.list",a.cardProduct),b.go("de.cards.transactions.list"))},a.cardProductPromise=d.get(i).then(function(b){a.cardProduct=b.content[0],void 0==a.cardProduct?f.emit("de.product.noData","cards",a):(null==a.cardProduct.cardDetails.debt&&(a.cardProduct.cardDetails.debt=0),a.chartStyleValue=h(a.cardProduct.cardDetails.debt,a.cardProduct.cardDetails.limitInCycle))},function(a){return e.error("Error getting card product"),g.reject()})}]),dbnextCardsModule.controller("dbnext.cards.WidgetElementController",["$scope","cardsService","pathService",function(a,b,c){a.cardListPromise=b.get({pageSize:1e4}).then(function(b){a.cardList=b,a.$broadcast("dataLoaded")}),a.widgetContent=c.generateTemplatePath("dbnext-cards")+"/elements/widget/cards-widgetElementViewContent.html"}]),angular.module("dbnext-cards").run(["$templateCache",function(a){a.put("templates/dbnext-cards/0.0.12/directives/dbCrdActivateNumberInput/dbCrdActivateNumberInput.html",'<div>{{card.cardNo | maskCardNrbFilter:1}} <input type="text" class="card-number-input" placeholder="{{::placeholder|translate}}"></div>'),a.put("templates/dbnext-cards/0.0.12/directives/dbCrdRepaymentTypeSelect/dbCrdRepaymentTypeSelect.html",'<div><ui-select class="eb-account-select" eb-themable search-enabled="false" theme="select2" on-select="selectAccount($item, $model)"><ui-select-match placeholder="{{::placeholder|translate}}"><span class="repayment-type-container"><span class="repayment-type-name">{{$select.selected.label}}</span> <span class="repayment-type-value" ng-show="$select.selected.repayAmount !== undefined && $select.selected.repayAmount != null">|&nbsp;<eb-amount style="display: inline-block" amount="$select.selected.repayAmount" currency="{{$select.selected.currency}}" absolute-value></eb-amount></span></span></ui-select-match><ui-select-choices class="block-choices" repeat="item as item in items"><div class="account-name">{{item.label}}</div><div ng-show="item.repayAmount !== undefined && item.repayAmount != null"><eb-amount style="display: inline-block; float: left" amount="item.repayAmount" currency="{{item.currency}}" absolute-value></eb-amount></div><div ng-show="item.repayAmount == undefined || item.repayAmount == null">&nbsp;</div></ui-select-choices></ui-select></div>'),a.put("templates/dbnext-cards/0.0.12/directives/dbCrdStatementFilter/dbCrdStatementFilter.html",'<div class="db-acc-transaction-filter"><form name="statementFilterForm" novalidate><div><div eb-themable class="list-filter"><div class="transaction-filter-container"><eb-responsive-row center label="accounts.statement.filter.label.period" class="period-label"><div eb-themable class="date-range"><eb-date-range-select ng-model="ngModel" eb-form="statementFilterForm"></eb-date-range-select></div></eb-responsive-row><div class="account-filter-padding-detail"><eb-action-footer submit-label="accounts.statement.filter.label.button" submit-action="submitFilter(statementFilterForm)"></eb-action-footer></div></div></div></div></form></div>'),a.put("templates/dbnext-cards/0.0.12/directives/dbCrdTransactionFilter/dbCrdTransactionFilter.html",'<div class="db-acc-transaction-filter"><form name="transactionFilterForm" novalidate><div><div eb-themable class="list-filter"><div class="transaction-filter-container"><eb-responsive-row><eb-select-type placeholder-key="db.cards.transactions.filter.placeholder.type" list="sortTypeAray" ng-model="ngModel.sortType"></eb-select-type></eb-responsive-row><eb-responsive-row center label="db.cards.transactions.filter.label.period" class="card-period-label"><div eb-themable class="date-range card-date-range"><span eb-date-range-select ng-model="ngModel" eb-form="transactionFilterForm"></span></div></eb-responsive-row><div class="account-filter-padding-detail"><eb-responsive-row label="db.cards.transactions.filter.label.transaction_name" label-for="title"><input type="text" class="title-input" placeholder="{{::\'db.cards.transactions.filter.transaction_name.placeholder\'|translate}}" id="title" ng-model="ngModel.operationTitle" maxlength="35"></eb-responsive-row><eb-responsive-row label="db.cards.transactions.filter.credit_card.operation.range" ng-if="selectedCard.cardType == \'CREDIT\' && selectedCard.cardSubType == \'MAIN\'"><eb-select-type placeholder-key="db.cards.transactions.filter.operation.range.placeholder" list="creditCardTypeOptionsArray" ng-model="ngModel.creditCardType"></eb-select-type></eb-responsive-row><eb-responsive-row center label="db.cards.transactions.filter.label.amount" label-for="amountFrom" class="top-label"><eb-amount-range-select eb-form="transactionFilterForm" amount-from="ngModel.operationAmountFrom" amount-to="ngModel.operationAmountTo" eb-fault-amount-msg="{{:: \'db.cards.transactions.filter.amount_range_select.validation.amount_to_bigger_than_from\' | translate}}"></eb-amount-range-select></eb-responsive-row><eb-action-footer submit-label="db.cards.transactions.filter.label.button" submit-action="submitFilter(transactionFilterForm)"></eb-action-footer></div></div></div></div></form></div>'),
a.put("templates/dbnext-cards/0.0.12/elements/menu/cards-menuElementView.html",'<li ng-class="{\'active\': isStateActive(\'de.cards\')}" ng-controller="dbnext.cards.MenuElementController" ui-sref="de.cards.content"><span eb-themable class="eb-icon eb-ico-widget-cards"></span> <span eb-msg="cards.title"></span></li>'),a.put("templates/dbnext-cards/0.0.12/elements/product/cards-productElementView.html",'<span ng-controller="dbnext.cards.ProductElementController" class="card-product" ng-cloak ng-class="{\'product-content\': !!cardProduct}" ng-click="goTo()"><div class="card-product-content" ng-show="cardProductPromise.$$state.status === 1 && cardProduct != undefined"><div class="card-product-name"><span eb-msg="db.cards.product.label.card_limit"></span> <span>&nbsp;</span> <span ng-bind="cardProduct.name"></span></div><div class="card-product-chart-wrap"><div class="card-product-chart-progress"><div eb-themable ng-style="chartStyleValue" class="card-product-chart-display"></div></div></div><div class="card-product-limits"><eb-amount class="card-product-limit-left" amount="cardProduct.availableFunds" currency="{{::cardProduct.currency}}" highlight-negative ng-show="cardProduct.cardSubType == \'MAIN\'"></eb-amount><eb-amount class="card-product-limit-right" amount="cardProduct.cardDetails.limitInCycle" currency="{{::cardProduct.currency}}"></eb-amount></div></div><div ng-show="cardProductPromise.$$state.status === 1 && cardProduct == undefined"><div class="card-product-empty"><span prevent-orphans eb-msg="db.cards.product.empty_list.marketing_info"></span><br><a href="{{::\'db.cards.product.empty_list.link_url\'|translate}}" target="_blank" ng-click="$event.stopPropagation()"><span eb-msg="db.cards.product.empty_list.link_name"></span></a></div></div><eb-preloader class="card-product-preloader" eb-promise="cardProductPromise" eb-rejected-message="{{::\'platform.component.slide_widget.rejected_response\'|translate}}"></eb-preloader></span>'),a.put("templates/dbnext-cards/0.0.12/elements/widget/cards-widgetElementView.html",'<span ng-controller="dbnext.cards.WidgetElementController" class="widget-main" ng-cloak><span db-lay-tile miniapp-name="dbnext-cards" product-count="{{::cardList.totalElements}}"><eb-slide-widget content="{{::widgetContent}}" items="cardList" max-indicators="10" eb-items-promise="cardListPromise"></eb-slide-widget><div ng-if="cardListPromise.$$state.status === 1 && cardList.content.length == 0" class="widget-content"><div class="widget-content-inner info-text"><span ng-bind="::\'db.cards.widget.empty_list.marketing_info\'|translate"></span><br><a href="{{::\'db.cards.widget.empty_list.link_url\'|translate}}" target="_blank" ng-click="$event.stopPropagation()"><span ng-bind="::\'db.cards.widget.empty_list.link_name\'|translate"></span></a></div></div></span></span>'),a.put("templates/dbnext-cards/0.0.12/elements/widget/cards-widgetElementViewContent.html",'<div class="widget-content"><span class="widget-name"><span ng-bind="::item.name"></span> - <span eb-msg="db.cards.type.{{item.cardType}}"></span><br><span style="display: block; overflow: hidden; text-overflow:ellipsis"><span ng-bind="::(item.cardOwnerName + \' \' + item.cardOwnerLastName)"></span></span></span><div ng-if="item.cardType == \'CHARGE\'"><eb-item-property label="db.cards.widget.content.liabilities" class="widget-summary value-left"><eb-amount amount="item.cardDetails.debtCurrentCycle" currency="{{::item.currency}}" absolute-value></eb-amount></eb-item-property><eb-item-property label="db.cards.widget.content.allowed_limit" class="widget-summary value-right"><eb-amount amount="item.cardDetails.limitInCycle" currency="{{::item.currency}}" absolute-value></eb-amount></eb-item-property></div><div ng-if="item.cardType == \'DEBIT\'"><eb-item-property label="db.cards.widget.content.daily_cash_limit" class="widget-summary value-left"><eb-amount amount="item.cardDetails.dailyLimit" currency="{{::item.currency}}" absolute-value></eb-amount></eb-item-property></div><div ng-if="item.cardType == \'CREDIT\'"><eb-item-property ng-if="item.cardSubType==\'MAIN\'" label="db.cards.widget.content.available_assets" class="widget-summary value-left"><eb-amount amount="item.availableFunds" currency="{{::item.currency}}" absolute-value></eb-amount></eb-item-property><eb-item-property label="db.cards.widget.content.card_limit" class="widget-summary value-right"><eb-amount amount="item.cardDetails.limitInCycle" currency="{{::item.currency}}" absolute-value></eb-amount></eb-item-property></div></div>'),a.put("templates/dbnext-cards/0.0.12/views/cardStatementDistibutionChangeModal.html",'<div class="eb-choice-dialog"><form name="statementDistributionForm" novalidate><eb-dialog eb-title="{{title}}" eb-icon="{{ icon }}" eb-on-close="close()" eb-message="{{ message }}"><eb-responsive-row top label="db.cards.statementdistribution.modal.cardNo">{{card.cardNo}}</eb-responsive-row><eb-responsive-row top label="db.cards.statementdistribution.modal.nrb.label">{{card.accountNo}}</eb-responsive-row><eb-responsive-row top label="db.cards.statementdistribution.modal.actual.distributiontype.label">{{card.cardDetails.statementDistributionDesc}}</eb-responsive-row><eb-responsive-row top label="db.cards.statementdistribution.modal.new.distributiontype.label"><ui-select eb-themable search-enabled="false" name="statementType" theme="select2" ng-model="cardStmtDistributionType" ng-required="true" on-select="selectStmtDistType($item,$model)"><ui-select-match placeholder="{{:: \'db.cards.statementdistribution.modal.select.placeholder\' | translate}}">{{$select.selected.description}}</ui-select-match><ui-select-choices class="block-choices" repeat="distributionType in cardStatementDistributionTypes"><div>{{distributionType.description}}</div></ui-select-choices></ui-select><div eb-validation-messages eb-name="statementType"><div eb-message-key="same"><span eb-msg="db.cards.details.statements.validation.same"></span></div><div eb-message-key="required"><span eb-msg="db.cards.details.statements.validation.required"></span></div></div></eb-responsive-row><eb-action-footer submit-label="db.cards.statementdistribution.modal.submit" submit-action="changeStatementDistributionType(statementDistributionForm)"></eb-action-footer></eb-dialog></form></div>'),a.put("templates/dbnext-cards/0.0.12/views/cardStatements.html",'<div eb-themable><eb-section-header eb-header="db.cards.statements.label.header" back-state="de.cards.content"></eb-section-header><eb-list id="cardStatementsListId" class="statement-based-list statement-without-top-border" ng-class="{\'filter-displayed\':showFilter}" eb-promise="cardStatementsPromise"><eb-list-item class="row" ng-repeat="statement in statementsList.content | filter:searchFilter"><eb-list-item-content class="item-content-with-actions"><div class="title-cell cell_1_in_2"><div class="statement-date-range">{{::"db.cards.statements.statement.dateFrom"|translate}} {{statement.dateFrom | date : \'dd.MM.yyyy\' }}&nbsp;</div><div class="statement-date-range" style="letter-spacing: 0.2px">{{::"db.cards.statements.statement.dateTo"|translate}} {{statement.dateTo | date : \'dd.MM.yyyy\'}}</div></div><!-- no whitespace fix--><div class="actions-cell"><div class="options options_menu"><div eb-list-options><li><a href="{{statement.link}}" target="{{statement.target}}"><span eb-themable class="eb-icon eb-ico-details options-icon"></span> <span class="option-label" eb-msg="db.cards.statements.options.label.download"></span></a></li></div></div><div class="options_link"><a class="eb-button" href="{{statement.link}}" target="{{statement.target}}"><span eb-msg="db.cards.statements.options.label.download"></span></a></div></div><!-- no whitespace fix--><div class="info-cell cell_2_in_2">{{::"db.cards.statements.statement.no"|translate}} {{statement.statementId}}</div></eb-list-item-content></eb-list-item><div class="miniapp-empty-list" ng-if="statementsList.content.length == 0">{{::"db.cards.statements.empty_list"|translate}}</div><div class="miniapp-empty-list" ng-if="statementsList.length == 0">{{::"db.cards.statements.list_data_error"|translate}}</div></eb-list></div>'),a.put("templates/dbnext-cards/0.0.12/views/cardsActivate.html",'<div class="inner-payment-form center-app-header"><eb-content-navigation></eb-content-navigation><div><div id="form-views" ui-view autoscroll="true"></div></div></div>'),a.put("templates/dbnext-cards/0.0.12/views/cardsActivateStep1.html",'<div class="cardRepaymentForm"><div><div class="inner-form-padding center-form"><div eb-themable><eb-section-header eb-header="db.cards.activate.section_header.header.{{card.cardType}}" eb-description="{{getCardDescription()}}" back-state="de.cards.content"></eb-section-header><form name="activateForm" novalidate><div class="form-body form-body-step1" ng-show="card != null"><div eb-responsive-row label="db.cards.activate.row.put_last_card_no_digits" tooltip-values="tooltip"><div db-crd-activate-number-input name="cardNumber" ng-model="activation.partCardNumber" ng-required="true" placeholder="db.cards.activate.row.card_no.placeholder"></div><div eb-validation-messages eb-name="cardNumber"><div eb-message-key="required"><span eb-msg="db.cards.activate.new.step1.cardNumber.invalid.required"></span></div><div eb-message-key="card.cardNumber.error.activation.card.incorrect.card.number"><span eb-msg="db.cards.activate.new.step1.cardNumber.invalid_card_number"></span></div><div eb-message-key="card.validate.error.card.incorrect.card.status"><span eb-msg="db.cards.activate.error.card.incorrect.card.status"></span></div><div eb-message-key="card.validate.error.card.user.is.not.card.owner"><span eb-msg="db.cards.activate.error.card.user.is.not.card.owner"></span></div></div></div><div eb-section-collapse=""><eb-input-row center label="" label-class="new-payment-label relaxed-label"><div class="row-details eb-regulations-row"><eb-checkbox class="exchange-checkbox" eb-name="clientConfirmation" eb-model="activation.clientConfirmation" eb-required="true" ng-mouseenter="isCheckboxHover = true" ng-mouseleave="isCheckboxHover = false" ng-class="{\'eb-checkbox-hover\' : isCheckboxHover}"></eb-checkbox><span ng-if="card.cardType == \'DEBIT\'" class="regulations-checkbox-label exchange-message" ng-click="activation.clientConfirmation=!activation.clientConfirmation" eb-msg="db.cards.activate.new.step1.row.debit_card_confirmation" prevent-orphans ng-mouseenter="isCheckboxHover = true" ng-mouseleave="isCheckboxHover = false"></span> <span ng-if="card.cardType == \'CHARGE\'" class="regulations-checkbox-label exchange-message" ng-click="activation.clientConfirmation=!activation.clientConfirmation" eb-msg="db.cards.activate.new.step1.row.charge_card_confirmation" prevent-orphans ng-mouseenter="isCheckboxHover = true" ng-mouseleave="isCheckboxHover = false"></span> <span ng-if="card.cardType == \'CREDIT\'" class="regulations-checkbox-label exchange-message" ng-click="activation.clientConfirmation=!activation.clientConfirmation" eb-msg="db.cards.activate.new.step1.row.credit_card_confirmation" prevent-orphans ng-mouseenter="isCheckboxHover = true" ng-mouseleave="isCheckboxHover = false"></span></div><eb-validation-messages eb-name="clientConfirmation"><div eb-message-key="required">{{::\'db.cards.activate.new.step1.row.required\' | translate}}</div></eb-validation-messages></eb-input-row></div><eb-action-footer submit-label="db.cards.activate.action_footer.confirm_next" submit-action="submit(activateForm)"></eb-action-footer></div></form></div></div></div></div>'),a.put("templates/dbnext-cards/0.0.12/views/cardsActivateStep2.html",'<div><div><div class="step2 inner-form-padding center-form"><eb-section-header eb-header="db.cards.activate.section_header.header.{{card.cardType}}" eb-description="{{getCardDescription()}}" back-state="de.cards.content"></eb-section-header><div class="form-body form-body-step2" ng-show="card != null"><eb-responsive-row top label="db.cards.activate.step2.row.card_to_activate" label-class="new-payment-label">{{card.cardNo | maskCardNrbFilter}}</eb-responsive-row><eb-action-footer submit-label="db.cards.activate.action_footer.confirm_accept" cancel-label="db.cards.activate.step2.action_footer.confirm_cancel" submit-action="accept()" cancel-action="change()"></eb-action-footer></div></div></div></div>'),a.put("templates/dbnext-cards/0.0.12/views/cardsChangePin.html",'<div class="cardChangePinForm" ng-if="cardDetails"><div><div class="inner-form-padding center-form"><div eb-themable ng-if="step === \'step1\'"><eb-section-header eb-header="{{getCardChangeHeader()}}" eb-description="{{getCardDescription()}}" back-state="de.cards.content"></eb-section-header><form name="cardChangePinForm" novalidate><div class="form-body form-body-step1" ng-show="card != null"><eb-responsive-row label="db.cards.change_pin.row.card_no">{{cardDetails.cardNo | maskCardNrbFilter}}</eb-responsive-row><div eb-responsive-row label="db.cards.change_pin.row.new_pin" tooltip-values="tooltip"><div class="cards-numpad-container"><input id="newPin" name="newPin" class="password-input" ng-model="changePinModel.newPin" ng-required="true" required type="password" placeholder="{{::\'db.cards.change_pin.row.new_pin.placeholder\'|translate}}" maxlength="4" ng-maxlength="4" ng-pattern="regExpPolicy.regExp" ng-change="onChange(\'newPin\', cardChangePinForm)" ng-blur="onBlur(\'newPin\', cardChangePinForm)" eb-digits-only="true" eb-no-repetitions-4 eb-no-increments-4 eb-no-decrements-4 ng-mousedown="clicked[\'newPin\'] = true" ng-mouseup="mouseUp(\'newPin\')" ng-mouseleave="mouseLeave(\'newPin\')"><div class="numpad-icon" ng-click="setNumpadModel(\'newPin\')"><i eb-themable class="eb-icon eb-icon-keybord"></i></div></div><eb-validation-messages eb-name="newPin"><div eb-message-key="required"><span eb-msg="db.cards.change_pin.validate.new_code.empty"></span></div><div eb-message-key="equal-to"><span eb-msg="db.cards.change_pin.validate.pass_mismatch"></span></div><div eb-message-key="digits-only"><span eb-msg="db.cards.change_pin.validate.pass_no_digit"></span></div><div eb-message-key="no-repetitions4"><span eb-msg="db.cards.change_pin.validate.repetitions"></span></div><div eb-message-key="no-increments4"><span eb-msg="db.cards.change_pin.validate.pass_increment_signs"></span></div><div eb-message-key="no-decrements4"><span eb-msg="db.cards.change_pin.validate.pass_increment_signs"></span></div><div eb-message-key="minlength"><span eb-msg="db.cards.change_pin.validate.new_code.short"></span></div><div eb-message-key="maxlength"><span eb-msg="db.cards.change_pin.validate.new_code.long"></span></div><div eb-message-key="length"><span eb-msg="db.cards.change_pin.validate.pass_bad_length"></span></div><div eb-message-key="card.newPin.error.card.incorrect.pin.number.equals"><span eb-msg="db.cards.change_pin.validate.repetitions"></span></div><div eb-message-key="card.newPin.error.activation.card.incorrect.card.number"><span eb-msg="db.cards.change_pin.validate.incorrect.card.number"></span></div><div eb-message-key="card.newPin.error.card.incorrect.card.number"><span eb-msg="db.cards.change_pin.validate.incorrect.card.number"></span></div><div eb-message-key="card.newPin.error.card.incorrect.pin.number"><span eb-msg="db.cards.change_pin.validate.incorrect.pin.number"></span></div><div eb-message-key="card.newPin.error.card.incorrect.pin.number.asc"><span eb-msg="db.cards.change_pin.validate.pass_increment_signs"></span></div><div eb-message-key="card.newPin.error.card.incorrect.pin.number.desc"><span eb-msg="db.cards.change_pin.validate.pass_increment_signs"></span></div><div eb-message-key="card.validate.error.card.incorrect.card.status"><span eb-msg="db.cards.change_pin.validate.incorrect.card.status"></span></div></eb-validation-messages></div><div eb-responsive-row label="db.cards.change_pin.row.confirm_new_pin"><div class="cards-numpad-container"><input id="confirmNewPin" name="confirmNewPin" class="password-input" ng-model="changePinModel.confirmNewPin" ng-required="true" required type="password" placeholder="{{::\'db.cards.change_pin.row.confirm_new_pin.placeholder\'|translate}}" maxlength="4" ng-pattern="regExpPolicy.regExp" eb-equal-to-index="cardChangePinForm.newPin.$viewValue" eb-digits-only="true" eb-no-repetitions-4 eb-no-increments-4 eb-no-decrements-4 ng-mousedown="clicked[\'confirmNewPin\'] = true" ng-mouseup="mouseUp(\'confirmNewPin\')" ng-mouseleave="mouseLeave(\'confirmNewPin\')"><div class="numpad-icon" ng-click="setNumpadModel(\'confirmNewPin\')"><i eb-themable class="eb-icon eb-icon-keybord"></i></div></div><eb-validation-messages eb-name="confirmNewPin"><div eb-message-key="required"><span eb-msg="db.cards.change_pin.validate.new_code.empty"></span></div><div eb-message-key="equal-to"><span eb-msg="db.cards.change_pin.validate.pass_mismatch"></span></div><div eb-message-key="digits-only"><span eb-msg="db.cards.change_pin.validate.pass_no_digit"></span></div><div eb-message-key="no-repetitions4"><span eb-msg="db.cards.change_pin.validate.repetitions"></span></div><div eb-message-key="no-increments4"><span eb-msg="db.cards.change_pin.validate.pass_increment_signs"></span></div><div eb-message-key="no-decrements4"><span eb-msg="db.cards.change_pin.validate.pass_increment_signs"></span></div><div eb-message-key="minlength"><span eb-msg="db.cards.change_pin.validate.new_code.short"></span></div><div eb-message-key="maxlength"><span eb-msg="db.cards.change_pin.validate.new_code.long"></span></div><div eb-message-key="length"><span eb-msg="db.cards.change_pin.validate.pass_bad_length"></span></div></eb-validation-messages></div><eb-action-footer submit-label="db.cards.change_pin.action_footer.confirm_next" submit-action="submit(cardChangePinForm)"></eb-action-footer></div></form><eb-numpad eb-form="cardChangePinForm" eb-num-input-name="{{numpad.name}}" eb-show-numpad="numpad.show" eb-maxlength="4" eb-caret-position="numpad.caret"></eb-numpad></div><div eb-themable ng-if="step === \'step2\'"><eb-section-header eb-header="{{getCardChangeHeader(\'2\')}}" eb-description="{{getCardDescription()}}" back-state="de.cards.content"></eb-section-header><div><div class="form-body form-body-step2" ng-show="card != null"><eb-responsive-row label="db.cards.change_pin.row.card_no">{{cardDetails.cardNo | maskCardNrbFilter}}</eb-responsive-row><eb-action-footer submit-label="db.cards.change_pin.action_footer.confirm" cancel-label="db.cards.change_pin.action_footer.cancel" submit-action="submitStep2()" cancel-action="backToStep1()"></eb-action-footer></div></div></div></div></div></div>'),a.put("templates/dbnext-cards/0.0.12/views/cardsContent.html",'<span ng-show="cardList.content.length > 0"><eb-mini-bar class="eb-container-padding-off" search-text="filterOptions.searchFilter" eb-search-placeholder="{{::\'db.cards.content.mini_bar.placeholder\' | translate}}" eb-disable-add="true"></eb-mini-bar></span><div eb-list eb-themable class="cards product-list" eb-promise="cardListPromise"><div eb-list-item ng-repeat="card in cardList.content | filter: { wrappedText : filterOptions.searchFilter }"><eb-list-item-content eb-list-item-collapse-trigger on-open="getBlockadesShort(card)" is-collapsed="card.isCollapsed"><div class="identification-cell"><div class="not-editable-product-name"><span class="text">{{card.name}} - <span eb-msg="db.cards.type.{{card.cardType}}"></span></span></div><div class="productNo">{{card.cardOwnerName}} {{card.cardOwnerLastName}}<br>{{card.cardNo | maskCardNrbFilter}}</div></div><!-- no whitespace fix--><div class="actions-cell"><div class="default-desktop-option"><a ui-sref="^.details" store-context="card"><span eb-msg="db.cards.content.list.options.details"></span></a></div><div class="options" ng-click="$event.stopPropagation()"><div eb-list-options ng-class="{\'editable-option-hide\': account.visible}"><li><a class="option-row" ui-sref="^.transactions.list" store-context="card"><span eb-themable class="eb-icon eb-ico-transaction-history options-icon"></span> <span class="option-label" eb-msg="db.cards.content.list.options.transactions"></span></a></li><li class="option-hidden-when-desktop"><a class="option-row" ui-sref="^.details" store-context="card"><span eb-themable class="eb-icon eb-ico-details options-icon"></span> <span class="option-label" eb-msg="db.cards.content.list.options.details"></span></a></li><li ng-if="card.cardType == \'CREDIT\' && card.cardSubType != null && card.cardSubType == \'MAIN\'"><a class="option-row" ui-sref="de.cards.repayment.step1" store-context="card"><span eb-themable class="eb-icon eb-ico-new-payment options-icon"></span> <span class="option-label" eb-msg="db.cards.content.list.options.repayment"></span></a></li><li ng-if="card.cardType == \'CREDIT\' && card.cardSubType != null && card.cardSubType == \'MAIN\'"><a class="option-row" ui-sref="^.statements" store-context="card"><span eb-themable class="eb-icon eb-icon-statement options-icon"></span> <span class="option-label" eb-msg="db.cards.options.list.options.statements"></span></a></li><li ng-if="card._links.create_card_activation"><a class="option-row" ui-sref="de.cards.activate.step1" store-context="card"><span eb-themable class="eb-icon eb-icon-activate options-icon"></span> <span class="option-label" eb-msg="db.cards.content.list.options.activate_card"></span></a></li><li ng-if="card._links.create_change_pin"><a class="option-row" ui-sref="^.newPin" store-context="card"><span eb-themable class="eb-icon eb-icon-pin-change options-icon"></span> <span class="option-label" eb-msg="db.cards.content.list.options.change_pin"></span></a></li></div></div></div><!-- no whitespace fix--><div class="properties-group-cell" ng-if="card.cardType == \'CHARGE\'"><div class="secondary-property-cell amount-property-cell"><eb-item-property label="db.cards.content.list.liabilities"><eb-amount amount="card.cardDetails.debtCurrentCycle" currency="{{card.currency}}" absolute-value></eb-amount></eb-item-property></div><!-- no whitespace to fix 2 x 50%--><div class="primary-property-cell"><eb-item-property label="db.cards.content.list.card_limit"><eb-amount class="assets" amount="card.cardDetails.limitInCycle" currency="{{card.currency}}" absolute-value></eb-amount></eb-item-property></div></div><!-- no whitespace fix--><div class="properties-group-cell" ng-if="card.cardType == \'DEBIT\'"><div class="secondary-property-cell amount-property-cell"><eb-item-property label="db.cards.content.list.payment_limits"><eb-amount amount="card.cardDetails.dailyLimit" currency="{{card.currency}}" absolute-value></eb-amount></eb-item-property></div><!-- no whitespace to fix 2 x 50%--><div class="primary-property-cell">&nbsp;</div></div><!-- no whitespace fix--><div class="properties-group-cell" ng-if="card.cardType == \'CREDIT\'"><div class="secondary-property-cell amount-property-cell"><eb-item-property ng-if="card.cardSubType==\'MAIN\'" label="db.cards.content.list.available_assets"><eb-amount amount="card.availableFunds" currency="{{card.currency}}"></eb-amount></eb-item-property></div><!-- no whitespace to fix 2 x 50%--><div class="primary-property-cell"><eb-item-property label="db.cards.content.list.card_limit"><eb-amount class="assets" amount="card.cardDetails.limitInCycle" currency="{{card.currency}}" absolute-value></eb-amount></eb-item-property></div></div></eb-list-item-content><eb-collapse class="account-list-details" is-collapsed="card.isCollapsed" on-open="getBlockadesShort(card, $index)" ng-click="$event.stopPropagation()"><div eb-list-details><div ng-if="card.cardSubType==\'MAIN\' && card.cardType==\'CREDIT\'" eb-list-details-item key="db.cards.content.list.outst_total_payment" class="collapse-details-item"><eb-amount amount="card.cardDetails.debt" currency="{{card.currency}}" absolute-value></eb-amount></div><div eb-list-details-item key="db.cards.content.list.card_status" class="collapse-details-item"><span eb-msg="db.cards.status.{{card.status}}"></div><div eb-list-details-item key="db.cards.content.list.expiration_date" class="collapse-details-item">{{card.dateExpirationEnd | dateFilter}}</div></div><div eb-list-subtable eb-promise="blockadesShortPromises[$index]" show-content="card.blockadesShort.length > 0"><div class="subtable-header"><span class="last-transactions">{{::\'db.cards.subtable.last_transactions\'|translate}}</span><span ui-sref="^.transactions.list" store-context="card" class="subtable-link">{{::\'db.cards.subtable.transactions.link\'|translate}} ></span></div><div eb-list-subtable-row ng-repeat="transaction in card.blockadesShort | limitTo:3"><div class="date-property-cell">{{transaction.transactionDate | date : \'dd.MM.yyyy\'}}</div><!-- no whitespace to fix 2 x 50%--><div class="amount-property-cell"><eb-amount amount="transaction.amount" currency="{{transaction.currency}}" highlight-negative></eb-amount></div><!-- no whitespace to fix 2 x 50%--><div class="description-property-cell"><div ng-repeat="descriptionLine in transaction.description track by $index">{{descriptionLine}}</div></div></div></div></eb-collapse></div><div class="miniapp-empty-list" ng-if="cardList.length == 0">{{::"db.cards.transactions.list_data_error"|translate}}</div><div class="miniapp-empty-list" ng-if="cardList.summary[0].length == 0">{{::"db.cards.content.list.empty_list"|translate}}</div></div>'),a.put("templates/dbnext-cards/0.0.12/views/cardsDetails.html",'<div eb-themable><eb-section-header eb-header="db.cards.details.section_header.header" eb-description="{{card.name}}" back-state="de.cards.content"></eb-section-header><div class="details-body" ng-if="cardDetails != null"><eb-responsive-row label="db.cards.details.row.card_type"><span ng-if="card.cardType == \'CREDIT\' && card.cardSubType != null">{{::\'db.cards.type.\'+cardDetails.cardType | translate | capitalizeFirst }}, {{::\'db.cards.details.credit_card.subtype.\'+cardDetails.cardSubType | translate | capitalizeFirst}}</span> <span ng-if="!(card.cardType == \'CREDIT\' && card.cardSubType != null)">{{::\'db.cards.type.\'+cardDetails.cardType | translate | capitalizeFirst}}</span></eb-responsive-row><eb-responsive-row label="db.cards.details.row.card_owner">{{cardDetails.cardOwnerName}} {{cardDetails.cardOwnerLastName}}</eb-responsive-row><eb-responsive-row label="db.cards.details.row.card_no">{{cardDetails.cardNo | maskCardNrbFilter}}</eb-responsive-row><eb-responsive-row label="db.cards.details.row.card_status"><span eb-msg="db.cards.status.{{cardDetails.status}}"></span></eb-responsive-row><span ng-if="cardDetails.cardType == \'CREDIT\'" ng-include="getLayoutsPath()+\'/views/cardsDetailsCredit.html\'"></span> <span ng-if="cardDetails.cardType == \'DEBIT\'" ng-include="getLayoutsPath()+\'/views/cardsDetailsDebit.html\'"></span> <span ng-if="cardDetails.cardType == \'CHARGE\'" ng-include="getLayoutsPath()+\'/views/cardsDetailsCharge.html\'"></span></div><div class="miniapp-empty-list" ng-if="cardDetails == null && cardsDetailsPromise.$$state.status != 0">{{::\'db.cards.transactions.list_data_error\'|translate}}</div></div>'),a.put("templates/dbnext-cards/0.0.12/views/cardsDetailsCharge.html",'<eb-responsive-row label="db.cards.details.row.exp_date">{{cardDetails.dateExpirationEnd | dateFilter: \'dd.MM.yyyy\'}}</eb-responsive-row><eb-responsive-row label="db.cards.details.row.account_no">{{cardDetails.accountNo | nrbIbanFilter}}</eb-responsive-row><eb-responsive-row label="db.cards.details.row.cycle_limit"><eb-amount amount="cardDetails.cardDetails.limitInCycle" currency="{{cardDetails.currency}}" absolute-value></eb-amount></eb-responsive-row><eb-responsive-row label="db.cards.details.row.cycle_trx"><eb-amount amount="cardDetails.cardDetails.debtCurrentCycle" currency="{{cardDetails.currency}}" absolute-value></eb-amount></eb-responsive-row><eb-responsive-row label="db.cards.details.row.settlmnt_date">{{cardDetails.settlmntDate | dateFilter: \'dd.MM.yyyy\'}}</eb-responsive-row>'),a.put("templates/dbnext-cards/0.0.12/views/cardsDetailsCredit.html",'<eb-responsive-row ng-show="cardDetails.cardSubType != null" label="db.cards.details.row.expiration_date" id="accountSectionId">{{cardDetails.dateExpirationEnd | dateFilter: \'dd.MM.yyyy\'}}</eb-responsive-row><eb-responsive-row ng-show="cardDetails.cardSubType != null && cardDetails.cardSubType == \'MAIN\'" label="db.cards.details.row.account_no">{{cardDetails.accountNo | nrbIbanFilter}}</eb-responsive-row><eb-responsive-row ng-show="cardDetails.cardSubType != null && cardDetails.cardSubType == \'MAIN\'" label="db.cards.details.row.loan_limit"><eb-amount amount="cardDetails.cardDetails.limitInCycle" currency="{{cardDetails.currency}}" absolute-value></eb-amount></eb-responsive-row><eb-responsive-row ng-show="cardDetails.cardSubType != null && cardDetails.cardSubType == \'MAIN\'" top label="db.cards.details.row.outst_total_payment"><eb-amount amount="cardDetails.cardDetails.debt" currency="{{cardDetails.currency}}" absolute-value></eb-amount></eb-responsive-row><eb-responsive-row ng-show="cardDetails.cardSubType != null && cardDetails.cardSubType == \'MAIN\'" key label="db.cards.details.row.blocked_funds"><eb-amount amount="cardDetails.blockedFunds" currency="{{cardDetails.currency}}" absolute-value></eb-amount></eb-responsive-row><eb-responsive-row ng-show="cardDetails.cardSubType != null && cardDetails.cardSubType == \'MAIN\'" key label="db.cards.details.row.avail_funds"><eb-amount amount="cardDetails.availableFunds" currency="{{cardDetails.currency}}"></eb-amount></eb-responsive-row><eb-responsive-row ng-show="cardDetails.cardSubType != null && cardDetails.cardSubType == \'MAIN\'" label="db.cards.details.row.settlmnt_date">{{cardDetails.settlmntDate | dateFilter: \'dd.MM.yyyy\'}}</eb-responsive-row><!-- <div class="details-row row" ng-show="cardDetails.cardSubType != null && cardDetails.cardSubType == \'MAIN\'">\n    <div class="col-md-3 col-sm-3 row-label" ng-click="handleCollapse(\'repayment\')">\n        <div class="new-payment-collapse-col col-md-3 col-sm-3"></div>\n        <db-pmt-collapse-label class="new-payment-collapse-label" collapse-label="db.cards.details.repayment.section.header" label="db.cards.details.repayment.section.header" ng-model="repaymentCollapsed"></db-pmt-collapse-label>\n    </div>\n </div> --><div ng-click="handleCollapse(\'repayment\')" ng-if="cardDetails.cardSubType == \'MAIN\'"><div db-pmt-collapse-label collapse-label="db.cards.details.repayment.section.header" label="db.cards.details.repayment.section.header" ng-model="repaymentCollapsed" eb-row="true"></div></div><div ng-show="!repaymentCollapsed" id="repaymentSectionId" ng-if="cardDetails.cardSubType == \'MAIN\'"><eb-responsive-row top label="db.cards.details.credit_card.debt_prev_settlmnt"><eb-amount amount="cardDetails.cardDetails.debtPrevUnsettled" currency="{{cardDetails.currency}}" absolute-value></eb-amount></eb-responsive-row><eb-responsive-row top label="db.cards.details.row.debt_prev_settlmnt"><eb-amount amount="cardDetails.cardDetails.debtPrevSettlmnt" currency="{{cardDetails.currency}}" absolute-value></eb-amount></eb-responsive-row><eb-responsive-row top label="db.cards.details.row.min_payment"><eb-amount amount="cardDetails.cardDetails.minPayment" currency="{{cardDetails.currency}}" absolute-value></eb-amount></eb-responsive-row><eb-responsive-row top label="db.cards.details.row.min_debt_prev_settlmnt"><eb-amount amount="cardDetails.cardDetails.minDebtPrevSettlmnt" currency="{{cardDetails.currency}}" absolute-value></eb-amount></eb-responsive-row><eb-responsive-row top label="db.cards.details.row.min_payment_date">{{cardDetails.cardDetails.minPaymentDate | dateFilter : \'dd.MM.yyyy\'}}</eb-responsive-row></div><eb-responsive-row top key label="db.cards.details.row.statements_distr" ng-show="cardDetails.cardSubType == \'MAIN\'"><div ng-if="cardDetails.cardDetails.statementDistributionDesc">{{cardDetails.cardDetails.statementDistributionDesc}}&nbsp; <a ng-click="changeStatementDistributionTypeModal(cardDetails)" class="statement-change" eb-msg="db.cards.details.statements.change"></a></div><div ng-if="!cardDetails.cardDetails.statementDistributionDesc"><span>{{::\'db.cards.details.settlement.no.data\' | translate }}</span></div></eb-responsive-row><!-- <div class="details-row row">\n    <div class="col-md-3 col-sm-3 row-label" ng-click="handleCollapse(\'limit\')">\n        <div class="new-payment-collapse-col col-md-3 col-sm-3" ng-class="{\'new-payment-collapse-margin\' : payment.template.paymentId != null}"></div>\n        <db-pmt-collapse-label class="new-payment-collapse-label" collapse-label="db.cards.details.limit.section.header" label="db.cards.details.limit.section.header" ng-model="limitCollapsed"></db-pmt-collapse-label>\n    </div>\n</div> --><div ng-click="handleCollapse(\'limit\')"><div db-pmt-collapse-label collapse-label="db.cards.details.limit.section.header" label="db.cards.details.limit.section.header" ng-model="limitCollapsed" eb-row="true"></div></div><div ng-show="!limitCollapsed" id="limitSectionId"><eb-responsive-row top label="db.cards.details.row.cash_limit"><eb-amount amount="cardDetails.cardDetails.dailyCashLimit" currency="{{cardDetails.currency}}" absolute-value></eb-amount></eb-responsive-row><eb-responsive-row top label="db.cards.details.row.trans_limit"><eb-amount amount="cardDetails.cardDetails.dailyTrxLimit" currency="{{cardDetails.currency}}" absolute-value></eb-amount></eb-responsive-row></div>'),
a.put("templates/dbnext-cards/0.0.12/views/cardsDetailsDebit.html",'<eb-responsive-row label="db.cards.details.row.exp_date">{{cardDetails.dateExpirationEnd | dateFilter: \'dd.MM.yyyy\'}}</eb-responsive-row><eb-responsive-row label="db.cards.details.row.account_no">{{cardDetails.accountNo | nrbIbanFilter}}</eb-responsive-row><eb-responsive-row label="db.cards.details.row.cash_limit"><eb-amount amount="card.cardDetails.dailyLimit" currency="{{cardDetails.currency}}" absolute-value></eb-amount></eb-responsive-row>'),a.put("templates/dbnext-cards/0.0.12/views/cardsRepayment.html",'<div class="inner-payment-form center-app-header"><eb-content-navigation></eb-content-navigation><div><div id="form-views" ui-view autoscroll="true"></div></div></div>'),a.put("templates/dbnext-cards/0.0.12/views/cardsRepaymentConfirm.html",'<div class="inner-form-padding" style="margin-left: auto; margin-right: auto"><div class="row"><div class="col-xs-12"><div class="panel" style="border: none"><div class="panel-body form-horizontal card-activation-panel-body" style="margin-left: auto; margin-right: auto" eb-center-div><div class="ico ion-checkmark" style="color: #0f9d58;font-size: 40px;display: inline-block"></div><span style="font-size: 16px">Przekazano przelew do realizacji</span></div></div></div></div><div class="action-panel"><div class="col-xs-12"><eb-button class="pull-right" ui-sref="de.cards.content">Ok</eb-button></div></div></div>'),a.put("templates/dbnext-cards/0.0.12/views/cardsRepaymentStep1.html",'<div class="cardRepaymentForm"><div><div class="inner-form-padding center-form"><div eb-themable><eb-section-header eb-header="db.cards.repayment.section_header.header" back-state="de.cards.content"></eb-section-header><form name="repaymentForm" novalidate><div class="form-body form-body-step1" ng-show="card != null"><div eb-responsive-row label="db.cards.repayment.row.card_to_repay">{{card.name}}, {{card.cardNo | maskCardNrbFilter}}</div><div eb-responsive-row label="db.cards.repayment.row.card_account_no">{{card.accountNo | nrbIbanFilter}}</div><div eb-responsive-row label="db.cards.repayment.row.from_the_account"><div eb-account-select name="remitterAccountId" account="formData.remitterAccount" ng-model="repayment.accountFrom" ng-required="true" placeholder="db.cards.repayment.step1.row.account_select.placeholder"></div><div eb-validation-messages eb-name="remitterAccountId"><div eb-message-key="required"><span eb-msg="db.payments.new.step1.row.account_select.validate"></span></div><div eb-message-key="contract.contractId.no.permission"><span eb-msg="db.cards.repayment.row.account_select.validate.passive_access"></span></div><div eb-message-key="transfer.remitterAccountId.error.lack.of.access.in.active.mode"><span eb-msg="db.cards.repayment.row.account_select.validate.passive_access"></span></div><div eb-message-key="transfer.beneficiaryAccountId.error.recipient.account.is.the.same.as.the.sender"><span eb-msg="db.cards.repayment.step1.row.beneficaryAccountNo.validate_recipient_account.is_the_same_as_the_sender"></span></div></div></div><eb-responsive-row label="db.cards.repayment.row.payment_type"><db-crd-repayment-type-select ng-model="repayment.paymentType" items="paymentTypesArray" name="repaymentType"></db-crd-repayment-type-select><eb-validation-messages eb-name="senderSelect"><div eb-message-key="required"><span eb-msg="payments.select_grantor"></span></div></eb-validation-messages></eb-responsive-row><eb-responsive-row label="db.cards.repayment.row.amount" center label-for="amount"><eb-input-amount eb-name="amount" eb-currency-model="{{repayment.currency}}" ng-model="repayment.amount" eb-disabled="disableAmount" eb-form="repaymentForm" account-id="{{repayment.accountFrom}}" eb-min-amount="0.01" eb-fault-amount-msg="{{ ::\'db.cards.repayment.row.amount.invalid\' | translate }}" eb-required="true"></eb-input-amount><div eb-validation-messages eb-name="amount"><div eb-message-key="transfer.amount.error.exceeds.available.funds.for.agreement"><span eb-msg="db.cards.repayment.step1.validation.accessible_assets_fault"></span></div><div eb-message-key="transfer.amount.error.exceeds.daily.limit.for.user"><span eb-msg="db.cards.new.step1.row.amount.validate.exceeds_daily_limit_for_user"></span></div><div eb-message-key="transfer.amount.error.exceeds.single.limit.for.user"><span eb-msg="db.cards.new.step1.row.amount.validate.exceeds_single_limit_for_user"></span></div><div eb-message-key="transfer.amount.error.exceeds.daily.limit.for.agreement"><span eb-msg="db.cards.new.step1.row.amount.validate.exceeds_daily_limit_for_agreement"></span></div><div eb-message-key="transfer.amount.error.exceeds.single.limit.for.agreement"><span eb-msg="db.cards.new.step1.row.amount.validate.exceeds_single_limit_for_agreement"></span></div></div></eb-responsive-row><div eb-section-collapse="{{ !(repaymentForm.remitterAccountId.$viewValue.currency && repayment.cardSelected.currency!=repaymentForm.remitterAccountId.$viewValue.currency) }}"><eb-input-row center label="" label-class="new-payment-label relaxed-label"><div class="row-details eb-regulations-row"><eb-checkbox class="exchange-checkbox" eb-name="diffCurrencyConfirmation" eb-model="repayment.diffCurrencyConfirmation" eb-required="true" ng-mouseenter="isCheckboxHover = true" ng-mouseleave="isCheckboxHover = false" ng-class="{\'eb-checkbox-hover\' : isCheckboxHover}"></eb-checkbox><span class="regulations-checkbox-label exchange-message" ng-click="repayment.diffCurrencyConfirmation=!repayment.diffCurrencyConfirmation" eb-msg="db.cards.repayment.new.step1.row.diff_currency_confirmation" prevent-orphans ng-mouseenter="isCheckboxHover = true" ng-mouseleave="isCheckboxHover = false"></span></div><eb-validation-messages eb-name="diffCurrencyConfirmation"><div eb-message-key="required">{{::\'db.cards.repayment.new.step1.row.required\' | translate}}</div></eb-validation-messages></eb-input-row></div><eb-responsive-row label="db.cards.repayment.row.title" top>{{repayment.description}}</eb-responsive-row><eb-responsive-row label="db.cards.repayment.row.repayment_date">{{card.cardDetails.minPaymentDate | dateFilter : \'dd.MM.yyyy\'}}</eb-responsive-row><eb-responsive-row class="last-row" label="db.cards.repayment.row.execution_date"><eb-date-input ng-model="repayment.paymentDate" eb-title="{{::\'db.cards.repayment.row.select_execution_date\' | translate }}" date-format="dd.MM.yyyy" name="paymentDate" eb-disable-past-dates="true" ng-required="true" date-input-validation-past></eb-date-input><div eb-validation-messages eb-name="paymentDate"><div eb-message-key="past"><span eb-msg="db.cards.repayment.new.step1.row.realization_date.validate.past"></span></div><div eb-message-key="required"><span eb-msg="db.cards.repayment.new.step1.row.realization_date.validate.required"></span></div><div eb-message-key="format"><span eb-msg="db.cards.repayment.new.step1.row.realization_date.validate.format"></span></div></div></eb-responsive-row><eb-action-footer submit-label="db.cards.repayment.action_footer.confirm.action" submit-icon="eb-ico-widget-payments" submit-action="submit(repaymentForm)"></eb-action-footer></div></form></div></div></div></div>'),a.put("templates/dbnext-cards/0.0.12/views/cardsRepaymentStep2.html",'<div><div><div class="step2 inner-form-padding center-form"><div class="panel-details"><eb-section-header eb-header="db.cards.repayment.section_header.header" back-state="de.cards.content"></eb-section-header><div ng-show="cardPromise.$$state.status === 1"><div class="form-body form-body-step2"><eb-responsive-row top label="db.cards.repayment.row.card_to_repay" label-class="new-payment-label">{{card.name}}, {{card.cardNo | maskCardNrbFilter}}</eb-responsive-row><eb-responsive-row top label="db.cards.repayment.row.card_account_no" label-class="new-payment-label">{{card.accountNo | nrbIbanFilter}}</eb-responsive-row><eb-responsive-row top label="db.cards.repayment.row.from_the_account" label-class="new-payment-label">{{repaymentDetails.accountNo | nrbIbanFilter}}</eb-responsive-row><eb-responsive-row top label="db.cards.repayment.row.payment_type" label-class="new-payment-label">{{paymentType.label}}</eb-responsive-row><eb-responsive-row top class="new-payment-step2-amount" label="db.cards.repayment.row.amount" label-class="new-payment-label"><eb-amount amount="repaymentDetails.amount" currency="{{ card.currency}}"></eb-amount></eb-responsive-row><eb-responsive-row top label="db.cards.repayment.row.title" label-class="new-payment-label"><span ng-repeat="line in repaymentDetails.title track by $index">{{line}}</span></eb-responsive-row><eb-responsive-row class="last-row" top label="db.cards.repayment.row.execution_date" label-class="new-payment-label"><div>{{repaymentDetails.realizationDate | dateFilter}}</div></eb-responsive-row></div><div class="shaded-section"><eb-action-footer ng-show="!isCartIntent" class="additional-option" cancel-label="{{::\'db.cards.repayment.action_footer.confirm_cancel\' | translate}}" submit-label="{{::\'db.cards.repayment.action_footer.confirm_accept\' | translate}}" cancel-action="change()" submit-action="accept()"></eb-action-footer><div eb-action-footer ng-show="isCartIntent" cancel-label="db.cards.repayment.step2.action_footer.cart_cancel_label" submit-label="db.cards.repayment.step2.action_footer.cart_submit_label" cancel-action="change()" submit-action="save()"></div></div></div></div><div eb-preloader eb-promise="cardPromise" class="eb-preloader-default" eb-rejected-message="{{::\'db.cards.repayment.rejected_response\'|translate}}"></div></div></div></div>'),a.put("templates/dbnext-cards/0.0.12/views/cardsTransactionDetails.html",'<div eb-themable><eb-section-header eb-header="db.cards.transactions.details.label.header" eb-description="{{details.id}}" back-state="de.cards.transactions.list"></eb-section-header><div class="details-body" ng-if="details != null"><eb-responsive-row label="db.cards.transactions.details.label.transaction_date">{{details.transactionDate | dateFilter}}</eb-responsive-row><eb-responsive-row label="db.cards.transactions.details.label.accounting_date">{{details.accountingDate | dateFilter}}</eb-responsive-row><eb-responsive-row label="db.cards.transactions.details.label.transaction_type">{{::\'db.cards.transactions.filter.operation_type.\' + details.transactionType | translate}}</eb-responsive-row><eb-responsive-row label="db.cards.transactions.details.label.description"><div ng-repeat="description in details.description track by $index">{{description}}</div></eb-responsive-row><eb-responsive-row label="db.cards.transactions.details.label.amount"><eb-amount amount="details.amount" currency="{{details.currency}}" highlight-negative></eb-amount></eb-responsive-row><eb-responsive-row label="db.cards.transactions.details.label.account_amount"><eb-amount amount="details.accountAmount" currency="{{details.accountCurrency}}" highlight-negative></eb-amount></eb-responsive-row><eb-responsive-row label="db.cards.transactions.details.label.exchange_rate" ng-show="details.currency != \'PLN\'"><span>{{details.exchange | number: 2}}</span></eb-responsive-row><eb-responsive-row label="db.cards.transactions.details.label.settlement_amount" ng-show="details.currency != \'PLN\'"><eb-amount amount="details.settlementAmount" currency="{{details.settlementCurrency}}" highlight-negative></eb-amount></eb-responsive-row><eb-responsive-row label="db.cards.transactions.details.label.commission" ng-show="card.cardType != \'CREDIT\'">{{details.commission | emptyFilter}}</eb-responsive-row></div><div class="miniapp-empty-list" ng-if="details == null && cardTransactionDetailsPromise.$$state.status != 0">{{::\'db.cards.transactions.list_data_error\' | translate}}</div></div>'),a.put("templates/dbnext-cards/0.0.12/views/cardsTransactionsList.html",'<div eb-themable><eb-section-header eb-header="db.cards.content.history.section_header.header" eb-description="{{card.name}}, {{card.cardNo | maskCardNrbFilter}}" back-state="de.cards.content"></eb-section-header><div class="eb-filter-header-container"><div class="row eb-filter-header"><span eb-container class="padding small"><div class="col-xs-6 col-md-6 text-left eb-filter-clean"><span ng-show="showClearFilter" ng-click="clearFilter()" style="cursor: pointer" eb-msg="db.cards.transactions.filter.label.clear"></span></div><div class="col-xs-6 col-md-6 text-right eb-filter-switch" ng-class="{\'pull-right\': !showFilter}"><div ng-click="showFilterWindow()" style="cursor: pointer"><i eb-themable class="eb-icon" style="font-size: 1.3em" ng-class="{\'eb-ico-filter-applied\': showFilter == true , \'eb-ico-filter-show\': showFilter == false}"></i> <span ng-if="showFilter" class="link" eb-msg="db.cards.transactions.filter.label.hide"></span> <span ng-if="!showFilter" class="link" eb-msg="db.cards.transactions.filter.label.show"></span></div></div></span></div></div><div ng-show="showFilter"><db-crd-transaction-filter ng-model="filterParams" selected-card="card" context="transactionList" callback="submit(ctx, params)"></db-crd-transaction-filter></div><eb-list id="cardTransactionListId" class="time-based-list" ng-class="{\'filter-displayed\':showFilter}" eb-promise="cardTransactionPromise"><eb-list-item class="row" ng-repeat="transaction in transactionList.content | filter:searchFilter"><eb-list-item-content class="item-content-with-actions"><div class="date-cell cell_1_in_3">{{transaction.transactionDate | date : \'dd.MM.yyyy\'}}</div><!-- no whitespace fix--><div class="actions-cell"><div class="default-desktop-option"><a ng-click="getDetails(transaction)"><span eb-msg="db.cards.content.list.transaction.options.label.details"></span></a></div><div class="options no-desktop-options"><div eb-list-options><li><a class="option-row" ng-click="getDetails(transaction)"><span eb-themable class="eb-icon eb-ico-details options-icon"></span> <span class="option-label" eb-msg="db.cards.content.list.transaction.options.label.details"></span></a></li></div></div></div><!-- no whitespace fix--><div class="amount-property-cell cell_3_in_3"><eb-amount amount="transaction.amount" currency="{{transaction.currency}}" highlight-negative></eb-amount></div><!-- no whitespace fix--><div class="description-property-cell cell_2_in_3"><div class="collapsed-description" ng-class="{\'expanded\' : !transaction.isCollapsed}"><div ng-repeat="descriptionLine in transaction.description track by $index">{{descriptionLine}}</div></div></div></eb-list-item-content><eb-collapse is-collapsed="transaction.isCollapsed"><eb-list-details><eb-list-details-item key="db.cards.content.list.transaction.accounting_date" class="transaction-type-label">{{transaction.accountingDate | dateFilter: \'dd.MM.yyyy\'}}</eb-list-details-item></eb-list-details></eb-collapse></eb-list-item><div class="miniapp-empty-list" ng-if="transactionList.content.length == 0">{{::"db.cards.transactions.empty_list"|translate}}</div><div class="miniapp-empty-list" ng-if="transactionList.length == 0">{{::"db.cards.transactions.list_data_error"|translate}}</div></eb-list><div ng-show="cardTransactionPromise.$$state.status === 1"><eb-pagination eb-data="transactionList" eb-params="filterParams" eb-loading="loading" eb-pagination-count="5" scroll-to="cardTransactionListId" callback="submit(ctx, params, rel)"></eb-pagination></div></div>'),a.put("templates/dbnext-cards/0.0.12/views/cardsView.html",'<eb-full-screen-widget miniapp-name="cards"><div class="cards"><div class="row"><div class="col-md-12"><eb-screen-content><div ui-view></div></eb-screen-content></div><!-- 	        <div class="col-md-3 visible-md visible-lg" ng-if="events.length > 0">\n	           <eb-last-events title="Ostatnie zdarzenia" eb-events="events" eb-icon="eb-ico-app_accounts"></eb-last-events>\n	        </div> --></div></div></eb-full-screen-widget>')}]);