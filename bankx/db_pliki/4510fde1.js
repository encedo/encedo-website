;var dbnextAccountsModule=angular.module("dbnext-accounts",["ebanking-shared"]).config(["translationsLoaderProvider","$urlRouterProvider","guiProvider","pathServiceProvider","stateServiceProvider",function(a,b,c,d,e){var f="de",g="dbnext",h="accounts",i=g+"."+h,j=g+"-"+h,k=f+"."+h;webComponentRegistry[j].simpleName=h,webComponentRegistry[j].startState=k+".content",c.registerElement(j),c.registerElement(j,"product"),c.registerElement(j,"widget","transactions"),c.registerElement(j,"menu"),a.addTranslationsPath(d.generateRootPath(j)+"/i18n/messages_{{language}}.json"),b.when("/"+f+"/"+h,"/"+f+"/"+h+"/content"),e.state(f,{url:"/"+f,"abstract":!0,template:"<div ui-view></div>"}).state(k,{url:"/"+h,"abstract":!0,templateUrl:d.generateTemplatePath(j)+"/views/accountsView.html",controller:i+".ViewController"}).state(k+".content",{url:"/content",templateUrl:d.generateTemplatePath(j)+"/views/accountsContent.html",controller:i+".ContentController"}).state(k+".blockades",{url:"/:id/blockades",templateUrl:d.generateTemplatePath(j)+"/views/accountsBlockades.html",controller:i+".BlockadesController",previous:[k+".content"]}).state(k+".statements",{url:"/:id/statements",templateUrl:d.generateTemplatePath(j)+"/views/accountsStatements.html",controller:i+".StatementsController",previous:[k+".content"]}).state(k+".details",{url:"/:id/details",templateUrl:d.generateTemplatePath(j)+"/views/accountsDetails.html",controller:i+".DetailsController",previous:[k+".content"]}).state(k+".transactions",{url:"/transactions","abstract":!0,template:"<div ui-view></div>"}).state(k+".transactions.list",{url:"/:id/list",templateUrl:d.generateTemplatePath(j)+"/views/accountsTransactionList.html",controller:i+".TransactionsController"}).state(k+".transactions.details",{url:"/:id/details",controller:i+".TransactionDetailsController",templateUrl:d.generateTemplatePath(j)+"/views/accountsTransactionDetails.html"})}]).run(function(){});dbnextAccountsModule.controller("dbnext.accounts.BlockadesController",["$scope","translate","viewStateService","$filter","blockadeFilterCriteria","accountsService","initialState","$state","blockadesService","searchWrapperService","$location","$anchorScroll","$log",function(a,b,c,d,e,f,g,h,i,j,k,l,m){a.accountBlockadesList=null;var n=function(){a.accountBlockadesList.content=a.accountBlockadesList.content.map(function(a){return angular.extend(a,j.wrapBlockadesFields(a))})};return angular.isDefined(g)?(a.account=g,a.accList=!0,a.filterOptions={query:""},a.$watch("filterOptions.query",function(){null!=a.accountBlockadesList&&(a.accList=d("filter")(a.accountBlockadesList.content,a.filterOptions.query).length>0)}),null==a.filterParams&&(a.filterParams=e.getBlockadeFilterInitValues(a.account.lastTransactionBookingDate)),a.submit=function(b,c,d){if(angular.isDefined(b)){a.loading=!0;var e={accountId:a.account.accountId};return angular.extend(e,c),a.accountBlockadesPromise=i.relationSearch(b,e,d).then(function(b){a.accountBlockadesList=b,a.filterParams.pageNumber=b.pageNumber,a.filterParams.pageSize=b.pageSize,n(),a.loading=!1},function(b){m.error("Error getting account blockades"),a.accountBlockadesList=[]}),a.accountBlockadesPromise}},void(a.accountBlockadesPromise=i.search({accountId:a.account.accountId}).then(function(b){a.accountBlockadesList=b,a.filterParams.pageNumber=b.pageNumber,a.filterParams.pageSize=b.pageSize,n(),a.loading=!1},function(b){m.error("Error getting account blockades"),a.accountBlockadesList=[]}))):void h.go("de.accounts.content")}]),dbnextAccountsModule.controller("dbnext.accounts.ContentController",["$scope","$rootScope","$log","accountsService","$filter","transactionService","transactionFilterCriteria","gate","$timeout","customerProductService","blockadesService","$state","$stateParams","searchWrapperService","domService","viewStateService","resourceCreationFormService","translate",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){a.$parent.selected={},a.accountList=null,a.filterOptions={accountName:""},a.params={pageNumber:1,pageSize:1e4,fields:"accountId,accountName,accountNo,currentBalance,accessibleAssets,blockAssets,allowedLimit,currency,lastTransactionBookingDate"},p.resetInitialState("de.accounts.transactions.list"),a.showTransfer=function(){return null!==q.getResourceCreationForm("payments")},a.newTransfer=function(a){var b=q.getResourceCreationForm("payments"),c=b[0].linkEntryState+"domestic";p.setInitialState(c,a),l.go(c)};var s=function(){if(null!=a.accountList){a.accountList.summary=[];for(var b=e("filter")(a.accountList.content,{wrappedText:a.filterOptions.accountName}),c={},d=0,f=b.length-1;f>=0;f--){var g=b[f];if(void 0!=c[g.currency]){var h=c[g.currency];a.accountList.summary[h].accessibleAssets+=g.accessibleAssets,a.accountList.summary[h].currentBalance+=g.currentBalance}else{c[g.currency]=d,d++;var i={};i.accessibleAssets=g.accessibleAssets,i.currentBalance=g.currentBalance,i.currency=g.currency,a.accountList.summary.push(i)}}}},t=function(){a.accountList.content=a.accountList.content.map(function(a){return angular.extend(a,n.wrapAccountFields(a))})};a.accountListPromise=d.search(a.params).then(function(b){a.accountList=b,t(),s()},function(b){c.error("Error getting accounts list"),a.accountList=[]}),a.$watch("filterOptions.accountName",function(a,b){""==a&&""==b||(t(),s())}),a.transactionsShortPromises={},a.getHistoryShort=function(b,c){if(null==b.transactionsShort){var d=g.getTransactionFilterInitValues(b.lastTransactionBookingDate,!0);d.pageNumber=1,d.pageSize=3,d.dateTo=e("dateParam")(new Date(d.dateTo).setDate(new Date(new Date(d.dateTo).getDate()+30))),d.accountId=b.accountId,a.transactionsShortPromises[c]=f.search(d).then(function(a){b.transactionsShort=a.content})}},a.addPayment=function(a){l.go("de.payments.new.step1",{accountId:a})},a.addPayment=function(a){l.go("de.payments.new.step1",{accountId:a})},a.setCaretPosition=o.setCaretPosition,a.urlOption1=r.property("db.accounts.content.list.underlist_option_1.url"),a.urlOption2=r.property("db.accounts.content.list.underlist_option_2.url")}]),dbnextAccountsModule.controller("dbnext.accounts.DetailsController",["$scope","translate","$stateParams","accountsService","initialState","domService","$modal","pathService","$state",function(a,b,c,d,e,f,g,h,i){angular.isDefined(e)&&null!=e&&angular.isDefined(e.accountId)?a.accountDetailsPromise=d.get(e.accountId).then(function(b){a.details=b},function(b){$log.error("Error getting account details"),a.details=null}):i.go("de.accounts.content"),a.setCaretPosition=f.setCaretPosition,a.open=function(){var b=g.open({templateUrl:h.generateTemplatePath("dbnext-accounts")+"/views/details/accountsStatements.html",controller:"AccountsStatementsController",size:"sm",resolve:{account:function(){return a.details}}});b.result.then(function(){a.accountDetailsPromise=d.get(e.accountId).then(function(b){a.details=b},function(b){$log.error("Error getting account details"),a.details=null})})}}]),dbnextAccountsModule.controller("dbnext.accounts.StatementsController",["$scope","$window","$sce","translate","viewStateService","$filter","$timeout","accountsService","initialState","$state","searchWrapperService","statementFilterCriteria","accountStatementsService","formService","$log","gate","userService","httpService","$http",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){function t(){var a=window.navigator.userAgent,b=a.indexOf("MSIE ");return!!(b>0||a.match(/Trident.*rv\:11/))}if(a.showFilter=!1,a.showClearFilter=!1,!angular.isDefined(i))return void j.go("de.accounts.content");a.account=i,a.showFilterWindow=function(){a.showFilter=!a.showFilter},a.clearFilter=function(){a.filterParams={},a.filterParams=l.getStatementFilterInitValues(),a.filterParams.isClearing=!0,a.showClearFilter=!1},null==a.filterParams&&a.clearFilter();var u=function(a){for(var b=angular.copy(a),c=0;c<a.length;c++)a[c]instanceof Date&&(b[c]=f("date")(a[c],"yyyy-MM-dd"));return b},v=l.getStatementFilterInitValues();v=[v.dateFrom,v.dateTo,v.periodCount,v.periodDefinitionType],a.$watchGroup(["filterParams.dateFrom","filterParams.dateTo","filterParams.periodCount","filterParams.periodDefinitionType"],function(b,c){a.filterParams.isClearing=!1,JSON.stringify(u(b))===JSON.stringify(v)?a.showClearFilter=!1:a.showClearFilter=!0},!0),a.clearFilter();var w=function(a){if("last"==a.periodDefinitionType&&"days"==a.periodUnitType){var b=new Date;return b.setDate(b.getDate()-a.periodCount),b}return a.dateFrom},x=function(a){return"last"==a.periodDefinitionType&&"days"==a.periodUnitType?new Date:a.dateTo};a.submit=function(b,c,d){if(angular.isDefined(b)){a.loading=!0,console.log("parametry w submit",b,c,d);var f={accountId:a.account.accountId,dateFrom:w(c),dateTo:x(c),pageNumber:c.pageNumber,pageSize:c.pageSize};return a.accountStatementsPromise=m.relationSearch(b,f,d).then(function(b){console.debug("submit",b),a.statementsList=b,a.filterParams.pageNumber=a.statementsList.pageNumber,a.filterParams.pageSize=a.statementsList.pageSize,z(a.statementsList),n.scrollTo("accountStatementsListId"),e.appendFormData("statementsFilterParams",a.filterParams),n.scrollTo("accountStatementsListId")},function(b){o.error("Error getting account statements"),a.statementsList=[]}),a.accountStatementsPromise}};var y=angular.extend({accountId:a.account.accountId},a.filterParams);a.accountStatementsPromise=m.search(y).then(function(b){a.statementsList=b,a.filterParams.pageNumber=a.statementsList.pageNumber,a.filterParams.pageSize=a.statementsList.pageSize,z(a.statementsList),a.loading=!1,e.appendFormData("statementsFilterParams",a.filterParams)},function(b){o.error("Error getting account statements"),a.statementsList=[]});var z=function(b){angular.forEach(b.content,function(b){var c={accountId:a.account.accountId,statementId:b.statementId,dateFrom:a.filterParams.dateFrom,dateTo:a.filterParams.dateTo,pageNumber:a.filterParams.pageNumber,pageSize:a.filterParams.pageSize,type:b.type};p.getHref("self",b).then(function(a){q.getIdentityDetails().then(function(d){b.link=r.appContext+a+r.serializeParams(angular.extend({customerId:d.id},c),!0),b.target=t()?"":"_blank"})})})}}]),dbnextAccountsModule.controller("dbnext.accounts.TransactionDetailsController",["$scope","$log","initialState","viewStateService","$stateParams","pathService","transactionService","$state",function(a,b,c,d,e,f,g,h){a.pathPrefix=f.generateTemplatePath("dbnext-accounts"),angular.isDefined(c)&&null!=c&&angular.isDefined(c.id)?a.accountDetailsPromise=g.get(c.id).then(function(b){a.details=b},function(c){b.error("Error getting account transaction details"),a.details=null}):h.go("de.accounts.content")}]),dbnextAccountsModule.controller("dbnext.accounts.TransactionsController",["initialState","$stateParams","domService","viewStateService","$rootScope","accountsService","$scope","translate","$state","transactionService","transactionFilterCriteria","pathService","$filter","$location","$anchorScroll","$timeout","$log","httpService","userService","gate","language","$window","formService",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w){if(g.showFilter=!1,g.showClearFilter=!1,g.exportParams={},g.linesOptions={joint:" "},!angular.isDefined(a))return void i.go("de.accounts.content");g.account=a,angular.isDefined(d.getInitialState(i.current.name))&&(g.filterParams=d.getFormData("transactionFilterParams"));var x=function(a){if("last"==a.periodDefinitionType&&"days"==a.periodUnitType){var b=new Date;return b.setDate(b.getDate()-a.periodCount),b}return a.dateFrom},y=function(a){return a.dateTo};if(angular.isDefined(g.account)&&null==g.filterParams&&(g.filterParams=k.getTransactionFilterInitValues(g.account.lastTransactionBookingDate,!0)),g.transactionService=j,g.showFilterWindow=function(){g.showFilter=!g.showFilter},g.clearFilter=function(){g.filterParams={},g.filterParams=k.getTransactionFilterInitValues(g.account.lastTransactionBookingDate,!0),g.filterParams.isClearing=!0,g.showClearFilter=!1},g.submit=function(a,b,c){if(angular.isDefined(a)){g.loading=!0;var e={accountId:g.account.accountId,dateTo:y(b),operationType:b.operationType,operationAmountFrom:b.operationAmountFrom,operationAmountTo:b.operationAmountTo,operationTitle:b.operationTitle};return angular.extend(e,b),e.dateFrom=x(b),e.dateTo=y(b),g.accountHistoryPromise=j.relationSearch(a,e,c).then(function(a){C(a,e),D(a),g.accountHistoryList=a,g.loading=!1,g.filterParams.pageNumber=a.pageNumber,g.filterParams.pageSize=a.pageSize,d.appendFormData("transactionFilterParams",g.filterParams),w.scrollTo("accountTransactionListId")},function(a){q.error("Error getting account history list"),g.accountHistoryList=[]}),g.accountHistoryPromise}},angular.isDefined(a)){var z=angular.extend({accountId:g.account.accountId},g.filterParams);z.dateTo=y(g.filterParams)}g.accountHistoryPromise=j.search(z).then(function(a){C(a,z),D(a),g.accountHistoryList=a,g.loading=!1,g.filterParams.pageNumber=a.pageNumber,g.filterParams.pageSize=a.pageSize,d.appendFormData("transactionFilterParams",g.filterParams)},function(a){q.error("Error getting account history list"),g.accountHistoryList=[]});var A=function(a){for(var b=angular.copy(a),c=0;c<a.length;c++)a[c]instanceof Date&&(b[c]=m("date")(a[c],"yyyy-MM-dd"));return b},B=k.getTransactionFilterInitValues(g.account.lastTransactionBookingDate,!0);B=[B.dateFrom,B.dateTo,B.operationType,B.periodCount,B.periodDefinitionType,B.periodUnitType,B.operationTitle,B.operationAmountFrom,B.operationAmountTo],g.$watchGroup(["filterParams.dateFrom","filterParams.dateTo","filterParams.operationType","filterParams.periodCount","filterParams.periodDefinitionType","filterParams.periodUnitType","filterParams.operationTitle","filterParams.operationAmountFrom","filterParams.operationAmountTo"],function(a,b){g.filterParams.isClearing=!1,JSON.stringify(A(a))===JSON.stringify(B)?g.showClearFilter=!1:g.showClearFilter=!0},!0);var C=function(a,b){var d={accountId:b.accountId,dateFrom:m("date")(b.dateFrom,"yyyy-MM-dd"),dateTo:m("date")(b.dateTo,"yyyy-MM-dd"),formatType:"pdf",language:u.get(),operationType:b.operationType,operationAmountFrom:b.operationAmountFrom,operationAmountTo:b.operationAmountTo,operationTitle:b.operationTitle};g.exportParams=d,t.getHref("download_transaction_list_report",a).then(function(b){s.getIdentityDetails().then(function(e){a.link=r.appContext+b+r.serializeParams(angular.extend({customerId:e.id,accessProfileId:e.accessProfileId},d),!0),a.target=c.isIE()?"":"_blank"})})},D=function(a){angular.forEach(a.content,function(a){var b={resourceId:a.resourceId,formatType:"pdf",language:u.get()};t.getHref("download_transaction_report",a).then(function(d){s.getIdentityDetails().then(function(e){a.link=r.appContext+d+r.serializeParams(angular.extend({customerId:e.id},b),!0),a.target=c.isIE()?"":"_blank"})})})}}]),dbnextAccountsModule.controller("dbnext.accounts.ViewController",["$scope",function(a){a.selected={}}]),dbnextAccountsModule.controller("AccountsStatementsController",["$scope","formService","translate","notificationService","$stateParams","$state","$log","accountsService","account","domService","$modalInstance","accountStatementDistributionTypeDictionary","$timeout","$rootScope",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n){a.close=function(){k.dismiss()},a.details=i,a.mdl={},a.submit=function(c){return a.mdl.statementDistributionType.value==a.details.statementDistributionType&&c.statementType.$setValidity("same",!1),c.$valid?h.action({distributionTypeKey:a.mdl.statementDistributionType.value},"change_statement_distribution_type",a.details).then(function(){k.close(),d.showStatementDistributionChangedDialog({text:{message:"db.account.statement_distribution_change.confirmation.message",title:"db.account.statement_distribution_change.confirmation.title",back:"db.account.statement_distribution_change.confirmation.back"},state:{dashboard:"de.dashboard"}})},function(){k.dismiss()}):void b.dirtyFields(c)},a.statementDistributionTypeList=l,null==a.mdl.statementDistributionType&&(a.mdl.statementDistributionType=n.getObjectFromListBy("value","monthly_www",l)),a.$watch("mdl.statementDistributionType",function(b,c){a.mdl.statementDistributionType.value!=a.details.statementDistributionType&&a.statementDistributionForm.statementType.$setValidity("same",!0)})}]),dbnextAccountsModule.directive("dbAccStatementsFilter",["ebTheming","pathService","formService",function(a,b,c){return{restrict:"EA",replace:!0,transclude:!0,scope:{ngModel:"=",disabled:"=",context:"=",callback:"&"},templateUrl:b.generateTemplatePath("dbnext-accounts")+"/directives/dbAccStatementsFilter/dbAccStatementsFilter.html",link:function(b,d,e){a.applyTheme(d),b.submitFilter=function(a){return a.$valid?(c.scrollTo("accountStatementsListId"),b.ngModel.pageNumber=1,b.callback({ctx:b.context,params:b.ngModel})):void 0}}}}]),dbnextAccountsModule.directive("dbAccTransactionFilter",["$compile","ebTheming","accountTransactionType","commonService","$rootScope","$timeout","$log","$http","$templateCache","pathService","accountsService","$state","$filter","$window","formService",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){return{restrict:"EA",replace:!0,transclude:!0,scope:{ngModel:"=",context:"=",callback:"&"},templateUrl:j.generateTemplatePath("dbnext-accounts")+"/directives/dbAccTransactionFilter/dbAccTransactionFilter.html",link:function(a,d,e){b.applyTheme(d),a.transactionTypeCriteria=c.getTransactionTypes(),a.submitFilter=function(b){return angular.element(document.querySelector(":focus")).triggerHandler("blur"),b.$valid?(o.scrollTo("accountTransactionListId"),a.ngModel.pageNumber=1,angular.isUndefined(a.ngModel.operationAmountTo)&&(a.ngModel.operationAmountTo=b.amountTo.$modelValue),angular.isUndefined(a.ngModel.operationAmountFrom)&&(a.ngModel.operationAmountFrom=b.amountFrom.$modelValue),isNaN(a.ngModel.operationAmountTo)&&(a.ngModel.operationAmountTo=void 0),isNaN(a.ngModel.operationAmountFrom)&&(a.ngModel.operationAmountFrom=void 0),a.callback({ctx:a.context,params:a.ngModel})):void 0},a.formatAmount=function(a){}}}}]),dbnextAccountsModule.directive("dbAccTransactionSelect",["$compile","$rootScope","$timeout","$log","$http","$templateCache","pathService","accountsService","$location","$state","translate",function(a,b,c,d,e,f,g,h,i,j,k){return{restrict:"EA",replace:!1,transclude:!0,scope:{ngModel:"=",disabled:"="},templateUrl:g.generateTemplatePath("dbnext-accounts")+"/directives/dbAccTransactionSelect/dbAccTransactionSelect.html",link:function(a,b,c){a.transactionTypes=[{id:0,name:k.property("accounts.filter.transaction.type.all")},{id:1,name:k.property("accounts.filter.transaction.type.recognition")},{id:2,name:k.property("accounts.filter.transaction.type.load")}],a.selectTransaction=function(b,c){a.ngModel=b.id}}}}]),dbnextAccountsModule.controller("dbnext.accounts.MenuElementController",["$scope","$rootScope",function(a,b){a.isStateActive=b.isStateActive}]),dbnextAccountsModule.controller("dbnext.accounts.ProductElementController",["$scope","accountsService","$log","events","$q","viewStateService","$state",function(a,b,c,d,e,f,g){var h={pageNumber:1,pageSize:1e4,fields:"accountId,accountName,accessibleAssets,currency,customerProductData",defaultForDispositions:!0};a.decreaseAmountFontSize=!1,a.goTo=function(){a.accountProduct&&(f.setInitialState("de.accounts.transactions.list",a.accountProduct),g.go("de.accounts.transactions.list"))},a.accountProductPromise=b.search(h).then(function(b){if(a.accountProduct=b.content[0],void 0==a.accountProduct)d.emit("de.product.noData","accounts",a);else for(var c=b.content.length-1;c>=0;c--)null!=b.content[c]&&b.content[c].customerProductData.defaultForDispositions&&(a.accountProduct=b.content[c],parseFloat(a.accountProduct.accessibleAssets)>=999999999999&&(a.decreaseAmountFontSize=!0))},function(a){return c.error("Error getting account product"),e.reject()})}]),dbnextAccountsModule.controller("dbnext.accounts.WidgetController",["$scope","$rootScope","pathService","accountsService","transactionService",function(a,b,c,d,e){function f(a){return 2>a?{height:"40px"}:3>a?{height:"86px"}:{height:"148px"}}function g(a){var b=angular.copy(a),c=[],d=[];b.quantityAccount=a.totalElements;for(var e=0,f=0;e<a.content.length;e++)c.push(a.content[e]),e%3!==2&&e!==a.content.length-1||(d.push(c.slice(0)),c=[],f++,b.totalElements=f);return b.content=d,b}a.params={pageNumber:1,pageSize:1e4,fields:"accountId,accountName,accessibleAssets,currency,lastTransactionBookingDate"},a.accountsPromise=d.search(a.params).then(function(b){a.accountList=g(b),a.accountWidgetHeight=f(b.totalElements),console.log(a.accountWidgetHight)}),a.widgetContent=c.generateTemplatePath("dbnext-accounts")+"/elements/widget/accounts-widgetElementViewContent.html"}]),dbnextAccountsModule.controller("dbnext.accounts.TransactionsWidgetElementController",["$scope","$filter","transactionService",function(a,b,c){var d={pageSize:4,dateFrom:0,dateTo:b("dateParam")((new Date).setDate((new Date).getDate()))};a.accountsTransactionsListPromise=c.searchCustomerTransaction(d).then(function(b){a.accountsTransactionsList=b,a.$broadcast("dataLoaded")})}]),angular.module("dbnext-accounts").run(["$templateCache",function(a){a.put("templates/dbnext-accounts/0.0.16/directives/dbAccStatementsFilter/dbAccStatementsFilter.html",'<form name="statementFilterForm" novalidate><div eb-themable class="list-filter"><div class="transaction-filter-container"><eb-responsive-row center label="accounts.statement.filter.label.period" class="period-label"><div eb-themable class="date-range"><eb-date-range-select ng-model="ngModel" eb-form="statementFilterForm"></eb-date-range-select></div></eb-responsive-row><div class="account-statement-filter-padding-detail"><eb-action-footer submit-label="accounts.statement.filter.label.button" submit-action="submitFilter(statementFilterForm)"></eb-action-footer></div></div></div></form>'),a.put("templates/dbnext-accounts/0.0.16/directives/dbAccTransactionFilter/dbAccTransactionFilter.html",'<form name="transactionFilterForm" novalidate><div eb-themable class="list-filter"><div class="transaction-filter-container"><eb-responsive-row center label="transaction.filter.label.period" class="period-label"><div eb-themable class="date-range"><eb-date-range-select ng-model="ngModel" eb-form="transactionFilterForm"></eb-date-range-select></div></eb-responsive-row><div class="account-filter-padding-detail"><eb-responsive-row label="transaction.filter.label.transaction_name" label-for="title"><input type="text" class="title-input" placeholder="{{::\'transaction.filter.placeholder.transaction_name\'|translate}}" id="title" ng-model="ngModel.operationTitle" maxlength="35"></eb-responsive-row><eb-responsive-row label="transaction.filter.label.transaction_type"><eb-select-type placeholder-key="transaction.filter.placeholder.type" list="transactionTypeCriteria" ng-model="ngModel.operationType"></eb-select-type></eb-responsive-row><eb-responsive-row center label="transaction.filter.label.amount" label-for="amountFrom" class="top-label"><eb-amount-range-select eb-form="transactionFilterForm" amount-from="ngModel.operationAmountFrom" amount-to="ngModel.operationAmountTo" eb-fault-amount-msg="{{:: \'db.accounts.transactions.filter.amount_range_select.validation.amount_to_bigger_than_from\' | translate}}"></eb-amount-range-select></eb-responsive-row><eb-action-footer submit-label="transaction.filter.label.button" submit-action="submitFilter(transactionFilterForm)"></eb-action-footer></div></div></div></form>'),a.put("templates/dbnext-accounts/0.0.16/directives/dbAccTransactionSelect/dbAccTransactionSelect.html",'<ui-select eb-themable search-enabled="false" ng-model="$parent.ngModel" theme="select2" ng-disabled="disabled" on-select="selectTransaction($item, $model)"><ui-select-match>{{$select.selected.name}}</ui-select-match><ui-select-choices class="block-choices" repeat="transaction.id as transaction in transactionTypes"><div>{{transaction.name}}</div></ui-select-choices></ui-select>'),a.put("templates/dbnext-accounts/0.0.16/elements/menu/accounts-menuElementView.html",'<li ng-class="{\'active\': isStateActive(\'de.accounts\')}" ng-controller="dbnext.accounts.MenuElementController" ui-sref="de.accounts.content"><span eb-themable class="eb-icon eb-ico-widget-accounts"></span> <span eb-msg="accounts.title"></span></li>'),a.put("templates/dbnext-accounts/0.0.16/elements/product/accounts-productElementView.html",'<span eb-column-size-class-change-event="column-1"><div ng-controller="dbnext.accounts.ProductElementController" ng-class="{\'product-content\': !!accountProduct}" class="account-product" ng-click="goTo()"><div class="account-product-content" ng-show="accountProductPromise.$$state.status === 1 && accountProduct != undefined"><div class="account-product-data"><div class="account-product-header"><span ng-bind="(accountProduct.customerProductData.customName || accountProduct.accountName)"></span></div><div ng-class="{\'amount-smaller-font-size\': decreaseAmountFontSize}" class="account-product-amount"><eb-amount amount="accountProduct.accessibleAssets" currency="{{accountProduct.currency}}" highlight-negative></eb-amount></div></div><div class="account-product-chart"><div class="account-product-chart-image"></div></div></div><div class="account-product-empty" ng-show="accountProductPromise.$$state.status === 1 && accountProduct == undefined"><div class="account-product-empty-content"><span eb-msg="db.accounts.product.empty"></span></div></div><eb-preloader class="account-product-preloader" eb-promise="accountProductPromise" eb-rejected-message="{{::\'platform.component.slide_widget.rejected_response\'|translate}}"></eb-preloader></div></span>'),a.put("templates/dbnext-accounts/0.0.16/elements/widget/accounts-widgetElementView.html",'<div ng-style="accountWidgetHeight" ng-cloak><span eb-column-size-class-change-event="column-2"><span ng-controller="dbnext.accounts.WidgetController" class="accounts-widget"><span db-lay-tile miniapp-name="dbnext-accounts" edit-mode="editMode" product-count="{{::accountList.quantityAccount}}"><eb-slide-widget ng-style="accountWidgetHeight" content="{{widgetContent}}" items="accountList" max-indicators="10" eb-items-promise="accountsPromise"></eb-slide-widget><div ng-if="accountsPromise.$$state.status === 1 && accountList.content.length == 0" class="widget-content"><div class="widget-content-inner info-text"><span eb-msg="account.widget.empty_list.marketing_info"></span><br><a href="{{::\'account.widget.empty_list.link_url\'|translate}}" target="_blank" ng-click="$event.stopPropagation()"><span ng-bind="\'account.widget.empty_list.link_name\'|translate"></span></a></div></div><div class="box-action-panel" ng-click="$event.stopPropagation()"><div class="action-button"><eb-button ui-sref="de.payments.form.domestic" class="primary icon-right eb-icon eb-ico-plus"><i eb-themable class="eb-icon eb-ico-widget-payments widget-action-icon"></i><span eb-msg="accounts.options.label.newTransfer"></span></eb-button></div></div></span></span></span></div>'),a.put("templates/dbnext-accounts/0.0.16/elements/widget/accounts-widgetElementViewContent.html",'<div class="widget-content"><div class="list-table-row-widget eb-dbnext-theme" ng-repeat="account in item | limitTo: 3"><div class="name-property-cell"><div class="name-left"><span ng-bind="account.customerProductData.customName || account.accountName"></span></div></div><div class="amount-property-cell"><eb-item-property><eb-amount amount="account.accessibleAssets" currency="{{::account.currency}}" amount-font-fit highlight-negative></eb-amount></eb-item-property></div></div></div>'),a.put("templates/dbnext-accounts/0.0.16/elements/widget/transactions/accounts-transactions-widgetElementView.html",'<span ng-controller="dbnext.accounts.TransactionsWidgetElementController" class="accounts-transactions-widget" ng-cloak><span db-lay-box class="second-type-widget" miniapp-name="dbnext-accounts" widget-name="transactions" edit-mode="editMode" product-count="{{accountList.totalElements}}"><div class="accounts-transactions-content" ng-show="accountsTransactionsListPromise.$$state.status === 1"><div class="accounts-transactions-content-row" ng-repeat="accountsTransaction in accountsTransactionsList.content"><div class="accounts-transactions-content-top"><div class="accounts-transaction-left"><span ng-bind="::accountsTransaction.title[0]"></span><span ng-show="accountsTransaction.title[0] == null" ng-bind="::accountsTransaction.description[0]"></span><span ng-show="accountsTransaction.title[0] != null && accountsTransaction.transactionUsDetails.formCode != null">&nbsp;{{accountsTransaction.transactionUsDetails.formCode}}</span></div><eb-amount class="accounts-transaction-right" amount="accountsTransaction.displayAmount" currency="{{accountsTransaction.currency}}" highlight-negative></eb-amount></div><!-- no whitespace fix--><div class="accounts-transactions-content-bottom"><div class="accounts-transaction-left"><span ng-bind="::(accountsTransaction.accountNo | maskNrbFilter)"></span></div><div class="accounts-transaction-right"><span ng-bind="::(accountsTransaction.bookingDate | amDateFormat: \'DD.MM.YYYY\')"></span></div></div></div></div><div ng-if="accountsTransactionsListPromise.$$state.status === 1 && accountsTransactionsList.content.length == 0" class="widget-content"><div class="accounts-transactions-widget-empty"><span class="accounts-transactions-widget-empty-text" eb-msg="account_transactions.widget.empty_list.text"></span></div></div><eb-preloader class="slide-widget-preloader" eb-promise="accountsTransactionsListPromise" eb-rejected-message="{{::\'platform.component.slide_widget.rejected_response\'|translate}}"></eb-preloader></span></span>'),a.put("templates/dbnext-accounts/0.0.16/views/accountsBlockades.html",'<div eb-themable class="eb-account-blockades"><eb-section-header eb-header="accounts.blockades.label.header" eb-description="{{account.customerProductData.customName || account.accountName}}" back-state="de.accounts.content"></eb-section-header><eb-mini-bar search-text="filterOptions.query" eb-search-placeholder="{{::\'accounts.blockades.search\'|translate}}" eb-disable-add="true"></eb-mini-bar><eb-list ng-class="{ \'empty\' : accountBlockadesList.content.length == 0 }" class="account-blockades time-based-list" eb-promise="accountBlockadesPromise"><eb-list-item class="row" ng-repeat="blockade in accountBlockadesList.content | filter:{wrappedText:filterOptions.query}"><eb-list-item-content class="item-content-without-actions"><div class="date-cell cell_1_in_3"><div><div>{{blockade.dateFrom | amDateFormat : \'DD.MM.YYYY\'}}</div><div ng-show="blockade.dateTo != null">{{blockade.dateTo | amDateFormat : \'DD.MM.YYYY\'}}</div></div></div><!-- no whitespace fix--><div class="amount-property-cell cell_3_in_3"><eb-amount amount="blockade.amount" currency="{{blockade.currency}}"></eb-amount></div><!-- no whitespace fix--><div class="description-property-cell cell_2_in_3"><span ng-if="blockade.type == \'BLOCKADE\'">{{blockade.blockadeDescription}}</span> <span ng-if="blockade.type == \'AUTHORIZATION\'">{{blockade.authorizationDetails.cardNo}}<br>{{blockade.authorizationDetails.merchantDate | amDateFormat : \'DD.MM.YYYY\'}}<br>{{blockade.authorizationDetails.merchantName}}<br>{{blockade.authorizationDetails.merchantCity}}<br>{{blockade.authorizationDetails.merchantCountry}}</span></div></eb-list-item-content></eb-list-item><div class="miniapp-empty-list" ng-if="accountBlockadesList.length == 0">{{::"db.accounts.list_data_error"|translate}}</div></eb-list><div class="miniapp-empty-list" ng-if="accountBlockadesList.content.length == 0 || !accList">{{::"accounts.blockades.empty_list"|translate}}</div><div ng-show="accountBlockadesPromise.$$state.status === 1"><eb-pagination eb-data="accountBlockadesList" eb-params="filterParams" eb-loading="loading" eb-pagination-count="5" scroll-to="accountBlockadeListId" callback="submit(ctx, params, rel)"></eb-pagination></div></div>'),a.put("templates/dbnext-accounts/0.0.16/views/accountsContent.html",'<span><!-- ng-show="accountList.content.length > 0"--><eb-mini-bar class="eb-container-padding-off" search-text="filterOptions.accountName" eb-search-placeholder="{{::\'accounts.filter.options.title\'|translate}}" eb-disable-add="true" eb-disable-search="!accountList.content.length > 0"></eb-mini-bar></span><eb-list eb-themable class="accounts product-list" eb-promise="accountListPromise"><div eb-list-item ng-repeat="account in accountList.content | filter: {wrappedText : filterOptions.accountName}"><eb-list-item-content eb-list-item-collapse-trigger on-open="getHistoryShort(account)" is-collapsed="account.isCollapsed"><div class="identification-cell" ng-class="{\'edit-mode\': account.visible}"><div id="editableDiv" class="productName" eb-editable-name eb-editable-model="account" customer-product-data="account.customerProductData" placeholder-text="{{account.accountName}}" ng-click="setCaretPosition(account.visible, $index); $event.stopPropagation()"></div><div class="productNo">{{account.accountNo | nrbIbanFilter}}</div></div><!-- no whitespace fix--><div class="actions-cell" ng-class="{\'edit-mode\': account.visible}"><div class="default-desktop-option"><a ui-sref="^.details" store-context="account" ng-click="$event.stopPropagation()"><span eb-msg="accounts.options.label.details"></span></a></div><div class="options" ng-click="$event.stopPropagation()"><div eb-list-options ng-class="{\'editable-option-hide\': account.visible}"><li ng-if="showTransfer()"><a class="option-row" ng-click="newTransfer(account)"><span eb-themable class="eb-icon eb-ico-new-payment options-icon"></span><span class="option-label" eb-msg="accounts.options.label.newTransfer"></span></a></li><li><a class="option-row" ui-sref="^.transactions.list" store-context="account"><span eb-themable class="eb-icon eb-ico-transaction-history options-icon"></span><span class="option-label" eb-msg="accounts.options.label.history"></span></a></li><li class="option-hidden-when-desktop"><a class="option-row" ui-sref="^.details" store-context="account"><span eb-themable class="eb-icon eb-ico-details options-icon"></span><span class="option-label" eb-msg="accounts.options.label.details"></span></a></li><li><a class="option-row" ui-sref="^.blockades" store-context="account"><span eb-themable class="eb-icon eb-ico-blockades options-icon"></span><span class="option-label" eb-msg="accounts.options.label.blockades"></span></a></li><li ng-if="account._links.account_statement"><a class="option-row" ui-sref="^.statements" store-context="account"><span eb-themable class="eb-icon eb-icon-statement options-icon"></span><span class="option-label" eb-msg="accounts.options.label.statements"></span></a></li></div></div></div><!-- no whitespace fix--><div class="properties-group-cell"><div class="secondary-property-cell amount-property-cell"><eb-item-property label="accounts.label.balance"><eb-amount amount="account.currentBalance" currency="{{account.currency}}" highlight-negative></eb-amount></eb-item-property></div><!-- no whitespace to fix 2 x 50%--><div class="primary-property-cell"><eb-item-property label="accounts.label.available_funds"><eb-amount class="assets" amount="account.accessibleAssets" currency="{{account.currency}}" highlight-negative></eb-amount></eb-item-property></div></div></eb-list-item-content><eb-collapse class="account-list-details" is-collapsed="account.isCollapsed" on-open="getHistoryShort(account, $index)" ng-click="$event.stopPropagation()"><div eb-list-details><div eb-list-details-item key="account.label.blockades" class="collapse-details-item"><eb-amount amount="account.blockAssets" currency="{{account.currency}}"></div><div eb-list-details-item key="account.label.overdraft_limit" class="collapse-details-item"><span class="amount"><eb-amount amount="account.allowedLimit" currency="{{account.currency}}"></span></div></div><div eb-list-subtable eb-promise="transactionsShortPromises[$index]" show-content="account.transactionsShort.length > 0"><div class="subtable-header"><span class="last-transactions">{{::\'account.subtable.last_transactions\'|translate}}</span><span ui-sref="^.transactions.list" store-context="account" class="subtable-link">{{::\'account.subtable.history.link\'|translate}} ></span></div><div eb-list-subtable-row ng-repeat="transaction in account.transactionsShort | limitTo:3"><div class="date-property-cell">{{transaction.bookingDate | amDateFormat : \'DD.MM.YYYY\'}}</div><!-- no whitespace to fix 2 x 50%--><div class="amount-property-cell"><eb-amount amount="transaction.displayAmountInAccountCurrency" currency="{{transaction.accountCurrency}}" highlight-negative></eb-amount></div><!-- no whitespace to fix 2 x 50%--><div class="description-property-cell"><span>{{transaction.title[0]}}</span><span ng-show="transaction.title[0] == null">{{transaction.description[0]}}</span> <span ng-show="transaction.title[0] != null && transaction.transactionUsDetails.formCode != null">&nbsp;{{transaction.transactionUsDetails.formCode}}</span></div></div></div></eb-collapse></div><div class="miniapp-empty-list" ng-if="accountList.length == 0">{{::"db.accounts.list_data_error"|translate}}</div><div class="miniapp-empty-list" ng-if="accountList.summary.length == 0">{{::"accounts.label.empty_list"|translate}}</div><div ng-show="accountList.content.length > 0 || accounts.length > 0" class="product-list-summary-item"><div ng-if="accountList.summary.length > 0" class="product-list-summary-label"><span eb-msg="accounts.label.summary"></span></div><!-- no whitespace fix--><div class="actions-cell"><div class="default-desktop-option"><a><span eb-msg="accounts.options.label.details"></span></a></div><div class="options"><div></div></div></div><!-- no whitespace to fix 2 x 50%--><div class="product-list-summary"><div class="secondary-property-cell property-summary-cell amount-property-cell"><span ng-repeat="accountSummary in accountList.summary"><span ng-if="$index == 0"><eb-item-property label="accounts.label.balance"><eb-amount amount="accountSummary.currentBalance" currency="{{accountSummary.currency}}" amount-font-fit highlight-negative></eb-amount></eb-item-property></span> <span ng-if="$index != 0"><eb-amount amount="accountSummary.currentBalance" currency="{{accountSummary.currency}}" amount-font-fit highlight-negative></eb-amount></span></span></div><!-- no whitespace to fix 2 x 50%--><div class="primary-property-cell property-summary-cell"><span ng-repeat="accountSummary in accountList.summary"><span ng-if="$index == 0"><eb-item-property label="accounts.label.available_funds"><eb-amount amount="accountSummary.accessibleAssets" currency="{{accountSummary.currency}}" amount-font-fit highlight-negative></eb-amount></eb-item-property></span> <span ng-if="$index != 0"><eb-amount amount="accountSummary.accessibleAssets" currency="{{accountSummary.currency}}" amount-font-fit highlight-negative></eb-amount></span></span></div></div></div></eb-list><eb-options-under-list ng-show="accountListPromise.$$state.status === 1"><div class="under-list-option first-option"><a ng-href="{{::urlOption1}}" target="_blank"><span class="option-label" eb-msg="db.accounts.content.list.underlist_option_1"></span></a></div><div class="under-list-option second-option"><a ng-href="{{::urlOption2}}" target="_blank"><span class="option-label" eb-msg="db.accounts.content.list.underlist_option_2"></span></a></div></eb-options-under-list>'),
a.put("templates/dbnext-accounts/0.0.16/views/accountsDetails.html",'<div eb-themable><eb-section-header eb-header="accounts.details.label.header" eb-description="{{details.customerProductData.customName || details.accountName}}" back-state="de.accounts.content"></eb-section-header><div class="details-body" ng-if="accountDetailsPromise.$$state.status === 1"><eb-responsive-row label="accounts.details.label.account_number">{{details.accountNo | nrbIbanFilter}}</eb-responsive-row><eb-responsive-row label="accounts.details.label.currency">{{details.currency}}</eb-responsive-row><eb-responsive-row label="accounts.details.label.accountType">{{details.accountName}}</eb-responsive-row><eb-responsive-row key label="accounts.details.label.custom_name"><div id="editableDiv" class="accountName" eb-editable-name customer-product-data="details.customerProductData" eb-editable-model="details" placeholder-text="{{ details.accountName }}" ng-click="setCaretPosition(details.visible)"></div></eb-responsive-row><eb-responsive-row label="accounts.details.label.currentBalance"><eb-amount amount="details.currentBalance" currency="{{ details.currency }}" highlight-negative></eb-amount></eb-responsive-row><eb-responsive-row label="accounts.details.label.accessibleAssets"><eb-amount amount="details.accessibleAssets" currency="{{ details.currency }}"></eb-amount></eb-responsive-row><eb-responsive-row label="accounts.details.label.blockades"><eb-amount amount="details.blockAssets" currency="{{ details.currency }}"></eb-amount></eb-responsive-row><eb-responsive-row label="accounts.details.label.allowedLimit"><eb-amount amount="details.allowedLimit" currency="{{ details.currency }}"></eb-amount></eb-responsive-row><eb-responsive-row label="accounts.details.label.interest"><eb-percentage value="details.accountInterest"></eb-percentage></eb-responsive-row><eb-responsive-row label="accounts.details.label.credit_interest"><eb-percentage value="details.creditInterest"></eb-percentage></eb-responsive-row><eb-responsive-row label="accounts.details.label.capitalization_period"><span eb-msg="account.details.settlement_period_type"></span> {{details.settlementPeriodCt}} <span eb-variety-msg key="\'account.details.settlement_period_type.\' + details.settlementPeriodCtType" count="details.settlementPeriodCt"></span></eb-responsive-row><eb-responsive-row label="accounts.details.label.nextCapitalizationDate">{{details.nextCapitalizationCtDate | dateFilter}}</eb-responsive-row><eb-responsive-row label="accounts.details.label.openDate">{{details.openDate | dateFilter}}</eb-responsive-row><eb-responsive-row label="accounts.details.label.owner_status"><span eb-msg-var key="account.role.type" variable="details.customerProductData.relationType"></span>,&nbsp; <span eb-msg-var key="account.access.type" variable="details.customerProductData.relationStatus"></span></eb-responsive-row><eb-responsive-row top key label="accounts.details.label.owner_name"><div ng-repeat="owner in ownerList = (details.ownersList | filter: { relationType: \'OWNER\', originalOwner: \'false\' })"><span>{{owner.fullName || owner.name}}</span></div></eb-responsive-row><eb-responsive-row top key label="accounts.details.label.authorization"><div ng-repeat="proxy in proxyList = (details.ownersList | filter: { relationType: \'PROXY\' })"><span>{{proxy.fullName || proxy.name}}</span></div><span ng-show="proxyList.length == 0">—</span></eb-responsive-row><eb-responsive-row top key label="accounts.details.label.distribiutionMethod"><span eb-msg-var key="db.accounts.statements.distribution_type" variable="details.statementDistributionType"></span>&nbsp; <a ng-click="open()" ng-hide="details.statementDistributionType == \'unavailable\' || details.statementDistributionType == \'none\'" class="statement-change" eb-msg="db.accounts.details.statements.change"></a></eb-responsive-row><eb-responsive-row label="accounts.details.label.transactionLimitDayli"><eb-amount amount="details.customerProductData.dayLimit" currency="{{ details.currency }}"></eb-amount></eb-responsive-row><eb-responsive-row label="accounts.details.label.transactionLimitSingle"><eb-amount amount="details.customerProductData.oneTimeLimit" currency="{{ details.currency }}"></eb-amount></eb-responsive-row></div><eb-preloader eb-promise="accountDetailsPromise" class="eb-preloader-default" eb-rejected-message="{{::\'db.accounts.details.rejected_response\'|translate}}"></eb-preloader></div>'),a.put("templates/dbnext-accounts/0.0.16/views/accountsStatements.html",'<div eb-themable><eb-section-header eb-header="accounts.statements.label.header" back-state="de.accounts.content"></eb-section-header><div class="eb-filter-header-container"><div class="row eb-filter-header"><span eb-container class="padding small"><div class="col-xs-6 col-md-6 text-left eb-filter-clean"><span ng-show="showClearFilter" ng-click="clearFilter()" style="cursor: pointer" eb-msg="transaction.filter.label.clear"></span></div><div class="col-xs-6 col-md-6 text-right eb-filter-switch" ng-class="{\'pull-right\': !showFilter}"><div ng-click="showFilterWindow()" style="cursor: pointer"><i eb-themable class="eb-icon" style="font-size: 1.3em" ng-class="{\'eb-ico-filter-applied\': showFilter == true , \'eb-ico-filter-show\': showFilter == false}"></i> <span ng-if="showFilter" class="link" eb-msg="transaction.filter.label.hide"></span> <span ng-if="!showFilter" class="link" eb-msg="transaction.filter.label.show"></span></div></div></span></div></div><div ng-show="showFilter"><db-acc-statements-filter ng-model="filterParams" context="statementsList" callback="submit(ctx, params)"></db-acc-statements-filter></div><eb-list id="accountStatementsListId" class="statement-based-list" ng-class="{\'filter-displayed\':showFilter}" eb-promise="accountStatementsPromise"><eb-list-item class="row" ng-repeat="statement in statementsList.content | filter:searchFilter"><eb-list-item-content class="item-content-with-actions"><div class="title-cell cell_1_in_2"><div class="statement-date-range">{{::"accounts.statements.statement.dateFrom"|translate}} {{statement.dateFrom | date : \'dd.MM.yyyy\' }}&nbsp;</div><div class="statement-date-range" style="letter-spacing: 0.2px">{{::"accounts.statements.statement.dateTo"|translate}} {{statement.dateTo | date : \'dd.MM.yyyy\'}}</div></div><!-- no whitespace fix--><div class="actions-cell"><div class="options options_menu"><div eb-list-options><li><a href="{{statement.link}}" target="{{statement.target}}"><span eb-themable class="eb-icon eb-ico-details options-icon"></span> <span class="option-label" eb-msg="accounts.statements.options.label.download"></span></a></li></div></div><div class="options_link"><a class="eb-button" href="{{statement.link}}" target="{{statement.target}}"><span eb-msg="accounts.statements.options.label.download"></span></a></div></div><!-- no whitespace fix--><div class="info-cell cell_2_in_2">{{::"accounts.statements.statement.no"|translate}} {{statement.statementNo}}</div></eb-list-item-content></eb-list-item><div class="miniapp-empty-list" ng-if="statementsList.content.length == 0">{{::"accounts.statements.empty_list"|translate}}</div><div class="miniapp-empty-list" ng-if="statementsList.length == 0">{{::"accounts.statements.list_data_error"|translate}}</div></eb-list><div ng-show="accountStatementsPromise.$$state.status === 1"><eb-pagination eb-data="statementsList" eb-params="filterParams" eb-loading="loading" eb-pagination-count="5" scroll-to="accountStatementsListId" callback="submit(ctx, params, rel)"></eb-pagination></div></div>'),a.put("templates/dbnext-accounts/0.0.16/views/accountsTransactionDetails.html",'<div eb-themable><eb-section-header eb-header="transaction.details.label.header" eb-description="{{::\'transaction.details.label.ref_no\' | translate}}:&nbsp;{{details.referenceNumber}}" back-state="de.accounts.transactions.list"></eb-section-header><div class="details-body" ng-if="details != null"><!-- dane transakcji --><eb-responsive-row label="transaction.details.label.transaction_date">{{details.transactionDate | amDateFormat : \'DD.MM.YYYY\'}}</eb-responsive-row><eb-responsive-row label="transaction.details.label.booking_date">{{details.bookingDate | amDateFormat : \'DD.MM.YYYY\'}}</eb-responsive-row><eb-responsive-row label="transaction.details.label.amount"><eb-amount amount="details.displayAmount" currency="{{details.currency}}" highlight-negative></eb-amount></eb-responsive-row><eb-responsive-row label="transaction.details.label.amount_in_account_currency" ng-show="details.currency != details.accountCurrency"><eb-amount amount="details.displayAmountInAccountCurrency" currency="{{details.accountCurrency}}" highlight-negative></eb-amount></eb-responsive-row><!-- end dane transakcji --><div ng-show="details.side === \'CREDIT\' && details.oppositeAccountNo != null"><eb-responsive-row top label="transaction.details.label.sender"><div ng-repeat="row in ::details.remitter track by $index">{{row}}</div></eb-responsive-row><eb-responsive-row top label="transaction.details.label.sender_account">{{details.side.toUpperCase() === \'DEBIT\' ? details.accountNo : details.oppositeAccountNo | nrbIbanFilter}} <span ng-show="details.remitterBank != null" class="eb-responsive-row-sublabel"><br>{{::\'transaction.details.label.sender_bank\'|translate}}:</span>&nbsp;{{details.remitterBank}}</eb-responsive-row></div><div ng-show="details.side === \'DEBIT\' && details.oppositeAccountNo != null"><eb-responsive-row ng-hide="details.transactionZusDetails != null" key top label="transaction.details.label.recipient"><div ng-repeat="row in ::details.beneficiary track by $index">{{row}}</div></eb-responsive-row><eb-responsive-row top label="transaction.details.label.recipient_account">{{details.side.toUpperCase() === \'CREDIT\' ? details.accountNo : details.oppositeAccountNo | nrbIbanFilter}} <span ng-show="details.beneficiaryBank != null" class="eb-responsive-row-sublabel"><br>{{::\'transaction.details.label.recipient_bank\'|translate}}:</span>&nbsp;{{details.beneficiaryBank}}</eb-responsive-row></div><eb-responsive-row ng-hide="details.transactionUsDetails != null || details.transactionZusDetails != null" key top label="transaction.details.label.transaction_description"><div ng-repeat="row in ::details.description track by $index">{{row}}</div></eb-responsive-row><eb-responsive-row label="transaction.details.label.transaction_type">{{details.transactionTypeDesc}}</eb-responsive-row><div ng-if="details.transactionUsDetails != null" ng-include="::pathPrefix + \'/views/accountsTransactionUsFields.html\'"></div><div ng-if="details.transactionZusDetails != null" ng-include="::pathPrefix + \'/views/accountsTransactionZusFields.html\'"></div><div ng-if="details.oppositeAccountNo != null"><div ng-show="details.side != \'CREDIT\'"><eb-responsive-row top label="transaction.details.label.sender"><div ng-repeat="row in ::details.remitter track by $index">{{row}}</div></eb-responsive-row><eb-responsive-row top label="transaction.details.label.sender_account">{{details.side.toUpperCase() === \'DEBIT\' ? details.accountNo : details.oppositeAccountNo | nrbIbanFilter}} <span ng-show="details.remitterBank != null" class="eb-responsive-row-sublabel"><br>{{::\'transaction.details.label.sender_bank\'|translate}}:</span>&nbsp;{{details.remitterBank}}</eb-responsive-row></div><div ng-show="details.side != \'DEBIT\'"><eb-responsive-row ng-hide="details.transactionZusDetails != null" key top label="transaction.details.label.recipient"><div ng-repeat="row in ::details.beneficiary track by $index">{{row}}</div></eb-responsive-row><eb-responsive-row top label="transaction.details.label.recipient_account">{{details.side.toUpperCase() === \'CREDIT\' ? details.accountNo : details.oppositeAccountNo | nrbIbanFilter}} <span ng-show="details.beneficiaryBank != null" class="eb-responsive-row-sublabel"><br>{{::\'transaction.details.label.recipient_bank\'|translate}}:</span>&nbsp;{{details.beneficiaryBank}}</eb-responsive-row></div></div><div ng-if="details.oppositeAccountNo == null"><div ng-show="details.side != \'CREDIT\'"><eb-responsive-row top label="transaction.details.label.debit_account">{{details.side.toUpperCase() === \'DEBIT\' ? details.accountNo : details.oppositeAccountNo | nrbIbanFilter}} <span ng-show="details.remitterBank != null" class="eb-responsive-row-sublabel"><br>{{::\'transaction.details.label.sender_bank\'|translate}}:</span>&nbsp;{{details.remitterBank}}</eb-responsive-row></div><div ng-show="details.side != \'DEBIT\'"><eb-responsive-row top label="transaction.details.label.credit_account">{{details.side.toUpperCase() === \'CREDIT\' ? details.accountNo : details.oppositeAccountNo | nrbIbanFilter}} <span ng-show="details.beneficiaryBank != null" class="eb-responsive-row-sublabel"><br>{{::\'transaction.details.label.recipient_bank\'|translate}}:</span>&nbsp;{{details.beneficiaryBank}}</eb-responsive-row></div></div><eb-responsive-row label="transaction.details.label.balance_after"><eb-amount amount="details.balanceAfterOperation" currency="{{details.accountCurrency}}" highlight-negative></eb-amount></eb-responsive-row></div><div class="miniapp-empty-list" ng-if="details == null && accountDetailsPromise.$$state.status != 0">{{::\'db.accounts.list_data_error\'|translate}}</div></div>'),a.put("templates/dbnext-accounts/0.0.16/views/accountsTransactionList.html",'<div eb-themable><eb-section-header eb-header="accounts.transactions.label.header" eb-description="{{account.customerProductData.customName || account.accountName}}" back-state="de.accounts.content"></eb-section-header><div class="eb-filter-header-container"><div class="row eb-filter-header"><span eb-container class="padding small"><div class="col-xs-6 col-md-6 text-left eb-filter-clean"><span ng-show="showClearFilter" ng-click="clearFilter()" style="cursor: pointer" eb-msg="transaction.filter.label.clear"></span></div><div class="col-xs-6 col-md-6 text-right eb-filter-switch" ng-class="{\'pull-right\': !showFilter}"><div ng-click="showFilterWindow()" style="cursor: pointer"><i eb-themable class="eb-icon" style="font-size: 1.3em" ng-class="{\'eb-ico-filter-applied\': showFilter == true , \'eb-ico-filter-show\': showFilter == false}"></i> <span ng-if="showFilter" class="link" eb-msg="transaction.filter.label.hide"></span> <span ng-if="!showFilter" class="link" eb-msg="transaction.filter.label.show"></span></div></div></span></div></div><div ng-show="showFilter"><db-acc-transaction-filter ng-model="filterParams" context="accountHistoryList" callback="submit(ctx, params)"></db-acc-transaction-filter></div><eb-list id="accountTransactionListId" class="account-history time-based-list" ng-class="{\'filter-displayed\':showFilter}" eb-promise="accountHistoryPromise"><eb-list-item class="row" ng-repeat="transaction in accountHistoryList.content | filter:searchFilter"><eb-list-item-content class="item-content-with-actions"><div class="date-cell cell_1_in_3"><span>{{transaction.bookingDate | amDateFormat : \'DD.MM.YYYY\'}}</span></div><!-- no whitespace fix--><div class="actions-cell"><div class="default-desktop-option"><a ui-sref="^.details" store-context="transaction"><span eb-msg="accounts.options.label.details"></span></a></div><div class="options"><div eb-list-options><li class="option-hidden-when-desktop"><a class="option-row" ui-sref="^.details" store-context="transaction"><span eb-themable class="eb-icon eb-ico-details options-icon"></span> <span class="option-label" eb-msg="accounts.options.label.details"></span></a></li><li><a href="{{transaction.link}}" target="{{transaction.target}}"><span eb-themable class="eb-icon eb-ico-details options-icon"></span> <span class="option-label" eb-msg="accounts.options.label.download"></span></a></li></div></div></div><!-- no whitespace fix--><div class="amount-property-cell cell_3_in_3"><eb-amount amount="transaction.displayAmountInAccountCurrency" currency="{{transaction.accountCurrency}}" highlight-negative></eb-amount></div><!-- no whitespace fix--><div class="description-property-cell cell_2_in_3"><div><div ng-switch="transaction.side"><span ng-switch-when="DEBIT"><div class="collapsed-recipient-name" ng-class="{\'expanded\' : !transaction.isCollapsed}" db-lines-join eb-lines="transaction.beneficiary" eb-lines-options="linesOptions"></div></span> <span ng-switch-when="CREDIT"><div class="collapsed-recipient-name" ng-class="{\'expanded\' : !transaction.isCollapsed}" db-lines-join eb-lines="transaction.remitter" eb-lines-options="linesOptions"></div></span></div><div class="collapsed-description" ng-class="{\'expanded\' : !transaction.isCollapsed}"><span ng-show="transaction.title[0] != null"><div db-lines-join eb-lines="transaction.title"></div></span> <span ng-show="transaction.title[0] == null">{{transaction.description[0]}}</span> <span ng-show="transaction.title[0] != null && transaction.transactionUsDetails.formCode != null">{{transaction.transactionUsDetails.formCode}}</span></div></div></div></eb-list-item-content><eb-collapse is-collapsed="transaction.isCollapsed"><eb-list-details><eb-list-details-item key="transaction.label.transaction_type" class="transaction-type-label transaction-type-label-top">{{transaction.transactionTypeDesc}}</eb-list-details-item><eb-list-details-item key="transaction.label.account_balance" class="transaction-type-label"><eb-amount amount="transaction.balanceAfterOperation" currency="{{transaction.accountCurrency}}" highlight-negative></eb-amount></eb-list-details-item></eb-list-details></eb-collapse></eb-list-item><div class="miniapp-empty-list" ng-if="accountHistoryList.length == 0">{{::"db.accounts.list_data_error"|translate}}</div><div class="miniapp-empty-list" ng-if="accountHistoryList.content.length == 0">{{::"transaction.list.empty_list"|translate}}</div></eb-list><div class="eb-pagination-container" ng-show="accountHistoryPromise.$$state.status === 1"><eb-pagination eb-data="accountHistoryList" eb-params="filterParams" eb-loading="loading" eb-pagination-count="5" scroll-to="accountTransactionListId" callback="submit(ctx, params, rel)"></eb-pagination></div><eb-options-under-list ng-if="accountHistoryList.content.length > 0" ng-show="accountHistoryPromise.$$state.status === 1"><db-export-to-file exportparams="exportParams" href="download_transaction_list_report" export-button="false" export-params="exportParams"></db-export-to-file></eb-options-under-list></div>'),a.put("templates/dbnext-accounts/0.0.16/views/accountsTransactionUsFields.html",'<eb-responsive-row label="transaction.details.label.id_type">{{details.transactionUsDetails.idType}}</eb-responsive-row><eb-responsive-row label="transaction.details.label.id_number">{{details.transactionUsDetails.idNumber}}</eb-responsive-row><eb-responsive-row label="transaction.details.label.form_code">{{details.transactionUsDetails.formCode}}</eb-responsive-row><eb-responsive-row label="transaction.details.label.period">{{details.transactionUsDetails.period}}</eb-responsive-row><eb-responsive-row label="transaction.details.label.obligation_id">{{details.transactionUsDetails.obligationId}}</eb-responsive-row>'),a.put("templates/dbnext-accounts/0.0.16/views/accountsTransactionZusFields.html",'<eb-responsive-row label="transaction.details.label.recipient">{{::\'transaction.details.beneficiary.zus\'|translate}}</eb-responsive-row><eb-responsive-row label="transaction.details.label.nip">{{details.transactionZusDetails.nip}}</eb-responsive-row><eb-responsive-row label="transaction.details.label.second_id_type">{{details.transactionZusDetails.secondIdType}}</eb-responsive-row><eb-responsive-row label="transaction.details.label.second_id_no">{{details.transactionZusDetails.secondIdNo}}</eb-responsive-row><eb-responsive-row label="transaction.details.label.payment_type">{{::\'transaction.details.zus.payment_type.\' + details.transactionZusDetails.paymentType |translate}}</eb-responsive-row><eb-responsive-row label="transaction.details.label.declaration_no">{{details.transactionZusDetails.declarationNo}}</eb-responsive-row><eb-responsive-row label="transaction.details.label.declaration">{{details.transactionZusDetails.declaration}}</eb-responsive-row><eb-responsive-row label="transaction.details.label.decision_no">{{details.transactionZusDetails.decisionNo}}</eb-responsive-row>'),a.put("templates/dbnext-accounts/0.0.16/views/accountsView.html",'<eb-full-screen-widget miniapp-name="accounts"><div class="accounts"><div><div><eb-screen-content><div ui-view autoscroll="true"></div></eb-screen-content></div><!-- 	<div class="col-md-3 visible-md visible-lg" ng-if="events.length > 0">\n	           <eb-last-events title="Ostatnie zdarzenia" eb-events="events" eb-icon="widget-accounts"></eb-last-events>\n	        </div> --></div></div></eb-full-screen-widget>'),a.put("templates/dbnext-accounts/0.0.16/views/details/accountsStatements.html",'<div class="eb-choice-dialog"><form name="statementDistributionForm" novalidate><div eb-dialog eb-title="{{\'db.accounts.details.statements.distribution_change.title\' | translate}}" eb-on-close="close()"><div eb-responsive-row label="db.accounts.details.statements.account_no"><div>{{details.accountNo | nrbIbanFilter}}</div><div>{{details.accountName}}</div></div><div eb-responsive-row top key label="db.accounts.details.statements.distribution_type"><span eb-msg-var key="db.accounts.statements.distribution_type" variable="details.statementDistributionType"></span></div><div eb-responsive-row label="db.accounts.details.statements.statement_distribution_type_select"><div><ui-select name="statementType" ng-required="true" eb-themable search-enabled="false" theme="select2" ng-disabled="disabled" ng-model="mdl.statementDistributionType"><ui-select-match placeholder="{{\'db.accounts.details.statements.statement_distribution_type.placeholder\'|translate}}">{{$select.selected.key | translate}}</ui-select-match><ui-select-choices class="block-choices" repeat="accountStatementDistribution in statementDistributionTypeList"><div>{{accountStatementDistribution.key | translate}}</div></ui-select-choices></ui-select><div eb-validation-messages eb-name="statementType"><div eb-message-key="same"><span eb-msg="db.accounts.details.statements.validation.same"></span></div><div eb-message-key="required"><span eb-msg="db.accounts.details.statements.validation.required"></span></div></div></div></div><div collapse="!(mdl.statementDistributionType.value == \'daily_mail_www\' || mdl.statementDistributionType.value == \'monthly_mail_www\')"><div eb-responsive-row top><span eb-msg="db.accounts.statements.distribution.paid_info"></span></div></div><div eb-action-footer submit-label="db.accounts.details.statements.action_footer.submit_label" submit-action="submit(statementDistributionForm)"></div></div></form></div>')}]);