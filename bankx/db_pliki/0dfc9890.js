var dbnextPaymentAdviceNotesModule=angular.module("dbnext-payment-advice-notes",["ebanking-shared"]).config(["translationsLoaderProvider","$urlRouterProvider","guiProvider","pathServiceProvider","stateServiceProvider",function(a,b,c,d,e){var f="de",g="dbnext",h="payment-advice-notes",i=g+"."+h,j=g+"-"+h,k=f+"."+h;webComponentRegistry[j].simpleName=h,webComponentRegistry[j].startState=k+".content.active",c.registerElement(j),c.registerElement(j,"menu"),a.addTranslationsPath(d.generateRootPath(j)+"/i18n/messages_{{language}}.json"),e.state(f,{url:"/"+f,"abstract":!0,template:"<div ui-view></div>"}).state(k,{url:"/"+h,"abstract":!0,templateUrl:d.generateTemplatePath(j)+"/views/paymentAdviceNotesView.html",controller:i+".ViewController"}).state(k+".content",{url:"/content",templateUrl:d.generateTemplatePath(j)+"/views/paymentAdviceNotesContent.html",controller:i+".ContentController"}).state(k+".content.active",{url:"/active",templateUrl:d.generateTemplatePath(j)+"/views/paymentAdviceNotesContentTab.html",controller:i+".ActiveContentController"}).state(k+".content.rejected",{url:"/rejected",templateUrl:d.generateTemplatePath(j)+"/views/paymentAdviceNotesContentTab.html",controller:i+".RejectedContentController"}).state(k+".content.details",{url:"/:id/details",templateUrl:d.generateTemplatePath(j)+"/views/paymentAdviceNotesDetails.html",controller:i+".DetailsController",previous:[k+".content.active",k+".content.rejected"]}).state(k+".new",{url:"/new",templateUrl:d.generateTemplatePath(j)+"/views/paymentAdviceNotesNew.html","abstract":!0}).state(k+".new.form",{url:"/form",templateUrl:d.generateTemplatePath(j)+"/views/paymentAdviceNotesNewForm.html",controller:i+".NewController"}).state(k+".accept",{url:"/:paymentAdviceNoteId/accept",templateUrl:d.generateTemplatePath(j)+"/views/paymentAdviceNotesNewAccept.html",controller:i+".NewAcceptController",previous:[k+".new.form"]})}]).run(["$rootScope","$state",function(a,b){a.$on("$stateChangeStart",function(a,c,d,e,f){var g=e.name,h=c.name;""!=g&&angular.isDefined(c.previous)&&c.previous.indexOf(g)==-1&&(a.preventDefault(),h.indexOf(webComponentRegistry["dbnext-payment-advice-notes"].simpleName)!=-1&&b.go(webComponentRegistry["dbnext-payment-advice-notes"].startState))})}]);dbnextPaymentAdviceNotesModule.controller("dbnext.payment-advice-notes.ActiveContentController",["$scope","$rootScope","$filter","$log","$state","paymentsAdviceNoteSummaryService","storageItemsService","paymentsAdviceNotesService","searchWrapperService","viewStateService",function(a,b,c,d,e,f,g,h,i,j){a.$parent.selected={},a.paymentAdviceNotesList={},a.itemsStorageParams={paymentAdviceNoteStatus:"REJECTED",pageSize:1e4};var k=function(){a.paymentAdviceNotesList.content=a.paymentAdviceNotesList.content.map(function(a){return angular.extend(a,i.wrapPaymentAdviceNoteFields(a))})};a.filterParams=j.getInitialState(e.current.name),null==a.filterParams&&(a.filterParams={paymentAdviceNoteStatus:"ACTIVE",pageSize:1e4}),a.submit=function(b,c,f){if(angular.isDefined(b))return a.loading=!0,a.paymentAdviceNotesListPromise=h.relationSearch(b,c,f).then(function(b){a.paymentAdviceNotesList=b,a.loading=!1,a.filterParams.pageNumber=b.pageNumber,a.filterParams.pageSize=b.pageSize,k(),j.setInitialState(e.current.name,a.filterParams)},function(b){d.error("Error getting payments list"),a.paymentAdviceNotesList=[]}),a.paymentAdviceNotesListPromise},a.searchPaymentAdviceNotesList=function(b){return h.search(b).then(function(b){a.paymentAdviceNotesList=b,a.loading=!1,a.filterParams.pageNumber=b.pageNumber,a.filterParams.pageSize=b.pageSize,k()},function(b){d.error("Error getting payments list"),a.paymentAdviceNotesList=[]})},a.searchPaymentAdviceNoteSummary=function(c){f.search(c).then(function(c){a.rejectedTabUnseenAmount.count=0,angular.forEach(c.content,function(b){a.rejectedTabUnseenAmount.count+=b.quantity}),b.$broadcast("updateTab",{id:"REJECTED",count:a.rejectedTabUnseenAmount.count})})},a.$watch("filterOptions.paymentAdviceNoteBranch",function(a,b){l()});var l=function(){if(null!=a.paymentAdviceNotesList){a.paymentAdviceNotesList.summary=[];var b=c("filter")(a.paymentAdviceNotesList.content,{wrappedText:a.filterOptions.paymentAdviceNoteBranch});a.paymentAdviceNotesList.summary.push(b)}};a.searchItemsFromStorage=function(b){g.searchItemsFromStorage(b).then(function(b){null!=b&&null!=b.content[0]&&(a.itemsStorageParams.modificationDateTimeFrom=b.content[0].value.rejectedTabLastEntryDate,a.searchPaymentAdviceNoteSummary(a.itemsStorageParams))})},a.paymentAdviceNotesListPromise=a.searchPaymentAdviceNotesList(a.filterParams),a.searchItemsFromStorage("dbnext-payment-advice-notes.settings")}]),dbnextPaymentAdviceNotesModule.controller("dbnext.payment-advice-notes.ContentController",["$scope","$filter","$log","$state","paymentsAdviceNoteSummaryService","storageItemsService","paymentsAdviceNotesService","searchWrapperService","viewStateService",function(a,b,c,d,e,f,g,h,i){a.currentTabState={},a.paymentAdviceNotesList={},a.filterOptions={paymentAdviceNoteBranch:""},a.stateName=d.current.name,a.rejectedTabUnseenAmount={count:0},a.tabs=[{id:"ACTIVE",label:"db.payment.advice.notes.content.tabs.active",state:"de.payment-advice-notes.content.active"},{id:"REJECTED",label:"db.payment.advice.notes.content.tabs.rejected",state:"de.payment-advice-notes.content.rejected"}],a.details=!1,a.$on("$stateChangeStart",function(b,c,d,e,f){"de.payment-advice-notes.content.details"==c.name||"de.payment-advice-notes.new.form"==c.name?(a.currentTabState.stateName=e.name,i.setInitialState("currentTabState",a.currentTabState)):"de.payment-advice-notes.content.details"!=e.name?(i.resetInitialState(c.name),a.details=!1,a.stateName=c.name):a.details=!1}),a.emitTabChange=function(b){a.$broadcast("changeTab",{direction:b})},i.resetInitialState("currentTabState")}]),dbnextPaymentAdviceNotesModule.controller("dbnext.payment-advice-notes.DetailsController",["$scope","$filter","$state","$log","initialState","paymentsAdviceNotesService","viewStateService","domService",function(a,b,c,d,e,f,g,h){a.$parent.details=!0;g.getInitialState(c.current.name);return a.currentTabState=g.getInitialState("currentTabState"),null==a.currentTabState?a.currentTabState={stateName:"de.payment-advice-notes.content.active"}:g.resetInitialState("currentTabState"),angular.isDefined(e)?(a.details=e,null!=e.backState&&void 0!=e.backState&&(a.currentTabState={stateName:e.backState}),a.setCaretPosition=h.setCaretPosition,void(a.paymentAdviceNoteDetailsPromise=f.get(e.paymentAdviceNoteId).then(function(b){a.details=b},function(b){d.error("Error getting payments details"),a.details=null}))):void c.go("de.payment-advice-notes.content.active")}]),dbnextPaymentAdviceNotesModule.controller("dbnext.payment-advice-notes.NewAcceptController",["$scope","$filter","$state","cartCountService","notificationService","paymentsAdviceNotesService","formService","viewStateService",function(a,b,c,d,e,f,g,h){a.isCartIntent=!1,a.isEditMode=!1,a.currentTabState=h.getInitialState("currentTabState"),null==a.currentTabState&&(a.currentTabState={stateName:"de.payment-advice-notes.content.active"});var i=h.getInitialState(c.current.name);i&&("add_to_cart"===i.intent&&(a.isCartIntent=!0),null!=i.paymentAdviceNoteId&&(a.isEditMode=!0)),a.paymentAdviceNotePromise=f.get(c.params.paymentAdviceNoteId).then(function(b){a.details=b,a.auth={},a.text={auth_method:"db.payment.advice.note.new.accept.row.auth.label.",no_auth_required:"db.payment.advice.note.new.accept.row.auth.no_authorization_required",tan_validate_required:"db.payment.advice.note.new.accept.row.auth.tan.validate.required",sms_validate_required:"db.payment.advice.note.new.accept.row.auth.sms.validate.required",token_validate_required:"db.payment.advice.note.new.accept.row.auth.token.validate.required",input_placeholders:"db.payment.advice.note.new.accept.row.auth.placeholder.",error_code_validate:"db.config.auth.error_code.validate."},i&&i.exchange&&(a.exchange=i.exchange)}),a.accept=function(b){return angular.element(document.querySelector(":focus")).triggerHandler("blur"),b.$valid?(a.errorCode=null,f.action({authenticationAttemptId:a.auth.authenticationAttemptId,credentials:a.auth.credentials,paymentAdviceNoteId:c.params.paymentAdviceNoteId},"accept_payment_advice_note",a.details).then(function(a){return f.get(a.content,{}).then(function(a){h.resetAllStates(),c.go("de.payment-advice-notes.content.active"),e.showNewPaymentAdviseDialog(a,{text:{title:"db.payment.advice.note.new.accept.confirmation.title",confirmationTextRejected:"db.payment.advice.note.new.accept.confirmation.confirmation_text_rejected",confirmationTextRealized:"db.payment.advice.note.new.accept.confirmation.confirmation_text_realized",confirmationTextInProgress:"db.payment.advice.note.new.accept.confirmation.confirmation_text_in_progress",confirmationTextDefault:"db.payment.advice.note.new.accept.confirmation.confirmation_text_default",createNew:"db.payment.advice.note.new.accept.confirmation.create_new",back:"db.payment.advice.note.new.accept.confirmation.back"},state:{dashboard:"de.dashboard",paymentsForm:"de.payment-advice-notes.new.form"}})})},function(b){var c=/([a-zA-Z])/;a.errorCode=c.test(b.text)?"":b.text})):void g.dirtyFields(b)},a.save=function(){return f.action({paymentAdviceNoteId:c.params.paymentAdviceNoteId},"save_in_cart_payment_advice_note",a.details).then(function(){h.resetAllStates(),d.refreshCartItemsCount(),e.showDispositionBasketInsertDialog({text:{createNewLabel:"db.payment.advice.note.new.accept.confirmation.create_new"},state:{dashboard:"de.dashboard",createNewState:"de.payment-advice-notes.new.form"}})})},a.change=function(){c.go("de.payment-advice-notes.new.form")};var j=h.getInitialState("de.payment-advice-notes.new.accept")||{};a.fromCart=j.fromCart,a.backState=j.backState,a.headerTitleKey=j.headerTitleKey}]),dbnextPaymentAdviceNotesModule.controller("dbnext.payment-advice-notes.NewController",["$scope","$filter","$state","$timeout","$q","translate","paymentsAdviceNotesService","paymentsAdviceNoteConditionsService","viewStateService","formService",function(a,b,c,d,e,f,g,h,i,j){a.formData={formModel:{amount:null},exchangeMessageHidden:!0},a.minimalAmount=0,a.minimumDateMsg="",a.maximumDateMsg="";var k=function(){a.formData.formModel.realizationDate?a.formData.formModel.realizationDate.getTime()<a.paymentAdviceNoteConditions.minimalDate.getTime()?a.formData.formModel.realizationDate=a.paymentAdviceNoteConditions.minimalDate:a.formData.formModel.realizationDate.getTime()>a.paymentAdviceNoteConditions.maximalDate.getTime()&&(a.formData.formModel.realizationDate=a.paymentAdviceNoteConditions.maximalDate):a.formData.formModel.realizationDate=a.paymentAdviceNoteConditions.minimalDate};a.paymentAdviceNoteConditionsPromise=h.get({}).then(function(b){a.paymentAdviceNoteConditions=b,a.paymentAdviceNoteConditions.minimalDate=new Date(a.paymentAdviceNoteConditions.minimalDate),a.paymentAdviceNoteConditions.maximalDate=new Date(a.paymentAdviceNoteConditions.maximalDate),k(),a.setDateMinMaxMsg(),a.setMinimalAmount()}),a.setMinimalAmount=function(){null!=a.paymentAdviceNoteConditions&&angular.isArray(a.paymentAdviceNoteConditions.currencyConditions)&&angular.forEach(a.paymentAdviceNoteConditions.currencyConditions,function(b,c){if(b.currency==a.formData.formModel.currency)return a.minimalAmount=b.minimalAmount,void a.paymentAdviceNoteForm.amount.$validate()})},a.getMinimalAmountMsg=function(){return f.property("db.payment.advice.note.new.form.row.amount.validate.minimal")+" "+a.minimalAmount+" "+a.formData.formModel.currency},a.setDateMinMaxMsg=function(){a.minimumDateMsg=f.property("db.payment.advice.note.new.form.row.realization_date.validate.past")+" ("+b("dateFilter")(a.paymentAdviceNoteConditions.minimalDate)+")",a.maximumDateMsg=f.property("db.payment.advice.note.new.form.row.realization_date.exceeds.maximal.date")+" ("+b("dateFilter")(a.paymentAdviceNoteConditions.maximalDate)+")"},a.currentTabState=i.getInitialState("currentTabState"),null==a.currentTabState?a.currentTabState={stateName:"de.payment-advice-notes.content.active"}:i.resetInitialState("currentTabState");var l=i.getInitialState(c.current.name);null!=l&&(a.formData=i.getFormData("paymentAdviceNoteForm")||{formModel:{amount:0}},a.formData.exchange=!1,a.formData.regulation=!1,null!=a.formData.formModel.realizationDate&&(a.formData.formModel.realizationDate=new Date(a.formData.formModel.realizationDate)),a.formData.formModel.remitterAccountId=l.accountId||a.formData.formModel.remitterAccountId,a.primaryAccount=l.accountNo,a.paymentAdviceNoteForm.intent="realize",i.resetInitialState(c.current.name)),a.submit=function(b){return angular.element(document.querySelector(":focus")).triggerHandler("blur"),b.$valid?(i.setInitialState(c.current.name,{}),a.formData.formModel.accountId=a.formData.formModel.accountId||a.formData.formModel.remitterAccountId,i.appendFormData("paymentAdviceNoteForm",a.formData),g.action(a.formData.formModel,"create_payment_advice_note").then(function(b){return i.setInitialState("de.payment-advice-notes.accept",a.paymentAdviceNoteForm),c.go("de.payment-advice-notes.accept",{paymentAdviceNoteId:b.content}),b},function(a){return null!=a&&null!=a.errors&&j.scrollToError(a.errors[0].field),e.reject(a)})):(j.dirtyFields(b),e.reject())},a.$watchGroup(["formData.remitterAccount.currency","formData.formModel.currency"],function(b){var c=b[0],e=b[1];d(function(){null!=e&&null!=c?(e!=c?a.formData.exchangeMessageHidden=!1:(a.formData.exchangeMessageHidden=!0,a.formData.exchange=!1),a.setMinimalAmount(),a.paymentAdviceNoteForm.exchange&&(a.paymentAdviceNoteForm.exchange.$setPristine(),a.paymentAdviceNoteForm.exchange.$setUntouched())):(a.formData.exchangeMessageHidden=!0,null!=a.paymentAdviceNoteForm.currency&&(a.paymentAdviceNoteForm.currency.$setPristine(),a.paymentAdviceNoteForm.currency.$setUntouched()),null!=a.paymentAdviceNoteForm.amount&&(a.paymentAdviceNoteForm.amount.$setPristine(),a.paymentAdviceNoteForm.amount.$setUntouched()))})})}]),dbnextPaymentAdviceNotesModule.controller("dbnext.payment-advice-notes.RejectedContentController",["$scope","$rootScope","$filter","$log","$state","paymentsAdviceNoteSummaryService","storageItemsService","paymentsAdviceNotesService","searchWrapperService","viewStateService",function(a,b,c,d,e,f,g,h,i,j){a.$parent.selected={},a.paymentAdviceNotesList={},a.itemsStorageParams={paymentAdviceNoteStatus:"REJECTED",pageSize:1e4};var k=function(){a.paymentAdviceNotesList.content=a.paymentAdviceNotesList.content.map(function(a){return angular.extend(a,i.wrapPaymentAdviceNoteFields(a))})};a.filterParams=j.getInitialState(e.current.name),null==a.filterParams&&(a.filterParams={paymentAdviceNoteStatus:"REJECTED",pageSize:1e4}),a.submit=function(b,c,f){if(angular.isDefined(b))return a.loading=!0,a.paymentAdviceNotesListPromise=h.relationSearch(b,c,f).then(function(b){a.paymentAdviceNotesList=b,a.loading=!1,a.filterParams.pageNumber=b.pageNumber,a.filterParams.pageSize=b.pageSize,k(),j.setInitialState(e.current.name,a.filterParams)},function(b){d.error("Error getting payments list"),a.paymentAdviceNotesList=[]}),a.paymentAdviceNotesListPromise},a.searchPaymentAdviceNotesList=function(b){return h.search(b).then(function(b){a.paymentAdviceNotesList=b,a.loading=!1,a.filterParams.pageNumber=b.pageNumber,a.filterParams.pageSize=b.pageSize,k();var c={rejectedTabLastEntryDate:new Date};g.putIntoStorage("dbnext-payment-advice-notes.settings",c).then(function(){a.searchItemsFromStorage("dbnext-payment-advice-notes.settings")})},function(b){d.error("Error getting payments list"),a.paymentAdviceNotesList=[]})},a.searchPaymentAdviceNoteSummary=function(c){f.search(c).then(function(c){a.rejectedTabUnseenAmount.count=0,angular.forEach(c.content,function(b){a.rejectedTabUnseenAmount.count+=b.quantity}),b.$broadcast("updateTab",{id:"REJECTED",count:a.rejectedTabUnseenAmount.count})})},a.$watch("filterOptions.paymentAdviceNoteBranch",function(a,b){l()});var l=function(){if(null!=a.paymentAdviceNotesList){a.paymentAdviceNotesList.summary=[];var b=c("filter")(a.paymentAdviceNotesList.content,{wrappedText:a.filterOptions.paymentAdviceNoteBranch});a.paymentAdviceNotesList.summary.push(b)}};a.searchItemsFromStorage=function(b){g.searchItemsFromStorage(b).then(function(b){null!=b&&null!=b.content[0]&&(a.itemsStorageParams.modificationDateTimeFrom=b.content[0].value.rejectedTabLastEntryDate,a.searchPaymentAdviceNoteSummary(a.itemsStorageParams))})},a.paymentAdviceNotesListPromise=a.searchPaymentAdviceNotesList(a.filterParams),a.searchItemsFromStorage("dbnext-payment-advice-notes.settings")}]),dbnextPaymentAdviceNotesModule.controller("dbnext.payment-advice-notes.ViewController",["$scope",function(a){a.selected={}}]),dbnextPaymentAdviceNotesModule.directive("dbPmntAdvNoteBranchSelect",["$compile","$rootScope","$timeout","$log","$http","pathService","$location","branchService",function(a,b,c,d,e,f,g,h){return{restrict:"EA",replace:!0,require:"ngModel",scope:{model:"=",placeholder:"@"},templateUrl:f.generateTemplatePath("dbnext-payment-advice-notes")+"/directives/dbPmntAdvNoteBranchSelect/dbPmntAdvNoteBranchSelect.html",link:function(a,b){a.branchListPromise=h.search().then(function(b){a.branchList=b}),b.on("click",function(a){b.querySelectorAll("input.ui-select-search")[0].focus()}),a.selectBranch=function(b,c){a.ngModel=b.id}}}}]),dbnextPaymentAdviceNotesModule.controller("dbnext.payment-advice-notes.MenuElementController",["$scope","$rootScope","gui",function(a,b,c){a.isStateActive=b.isStateActive;var d=function(){c.getVisibleElements("widget").then(function(b){a.adviceDashboard=!1;for(var c=b.length-1;c>=0;c--)if("dbnext-payment-advice-notes"===b[c].miniappName){a.adviceDashboard=!0;break}})};d(),a.$on("ebp.applications.editModeEnd",function(){d()})}]),dbnextPaymentAdviceNotesModule.controller("dbnext.payment-advice-notes.WidgetElementController",["$scope","pathService","paymentsAdviceNotesService",function(a,b,c){a.params={pageNumber:1,pageSize:5},a.filterParams={paymentAdviceNoteStatus:"ACTIVE",pageSize:1e4},a.paymentAdviceNotesListPromise=c.search(a.filterParams).then(function(b){a.paymentAdviceNotesList=b,a.$broadcast("dataLoaded")}),a.widgetContent=b.generateTemplatePath("dbnext-payment-advice-notes")+"/elements/widget/payment-advice-notes-widgetElementViewContent.html",a.submit=function(a,b,d){if(angular.isDefined(a))return c.relationSearch(a,b,d).then(function(a){return a})}}]),angular.module("dbnext-payment-advice-notes").run(["$templateCache",function(a){a.put("templates/dbnext-payment-advice-notes/0.0.12/directives/dbPmntAdvNoteBranchSelect/dbPmntAdvNoteBranchSelect.html",'<div class="select-searchbox"><ui-select eb-themable close-on-select="true" reset-search-input="true" ng-disabled="branchListPromise && branchListPromise.$$state.status === 0" search-enabled="true" theme="select2" on-select="selectBranch($item, $model)"><ui-select-match placeholder="{{(branchListPromise && branchListPromise.$$state.status === 0) && (\'platform.component.tax.city.placeholder.loading\' | translate) || (placeholder|translate)}}"><span ng-repeat="line in $select.selected.name track by $index">{{line.length > 0 ? line : \'\\&nbsp\'}}</span></ui-select-match><ui-select-choices class="block-choices" refresh="funcAsync($select.search)" refresh-delay="100" repeat="branch.id as branch in branchList | filter: { name :  $select.search}"><div ng-class="{\'selected-type\' : branch.id == ngModel}">{{branch.name}}</div></ui-select-choices></ui-select></div>'),a.put("templates/dbnext-payment-advice-notes/0.0.12/elements/menu/payment-advice-notes-menuElementView.html",'<li ng-class="{\'active\': isStateActive(\'de.payment-advice-notes\')}" ng-controller="dbnext.payment-advice-notes.MenuElementController" ui-sref="de.payment-advice-notes.content.active"><span eb-themable class="eb-icon eb-ico-widget-payments"></span> <span eb-msg="payment.advice.notes.title"></span></li>'),a.put("templates/dbnext-payment-advice-notes/0.0.12/elements/widget/payment-advice-notes-widgetElementView.html",'<span ng-controller="dbnext.payment-advice-notes.WidgetElementController" class="widget-main"><span db-lay-tile miniapp-name="dbnext-payment-advice-notes" product-count="{{paymentAdviceNotesList.totalElements}}"><eb-slide-widget class="payment-advice-notes" content="{{widgetContent}}" items="paymentAdviceNotesList" max-indicators="10" eb-items-promise="paymentAdviceNotesListPromise" eb-update="submit(ctx, params, rel)"></eb-slide-widget><div ng-if="paymentAdviceNotesListPromise.$$state.status === 1 && paymentAdviceNotesList.content.length == 0" class="widget-content"><div class="widget-content-inner info-text">{{::\'db.payment.advice.notes.widget.empty_list.marketing_info\'|translate}}<br><a href="{{::\'db.payment.advice.notes.widget.empty_list.link_url\'|translate}}" target="_blank" ng-click="$event.stopPropagation()">{{::\'db.payment.advice.notes.widget.empty_list.link_name\'|translate}}</a></div></div><div class="box-action-panel" ng-click="$event.stopPropagation()"><div class="action-button"><eb-button ui-sref="de.payment-advice-notes.new.form" class="primary icon-right eb-icon eb-ico-plus"><i eb-themable class="eb-icon eb-ico-widget-payments widget-action-icon"></i><span eb-msg="db.payment.advice.notes.dashboard.widget.button.new_payment_advice_note"></span></eb-button></div></div></span></span>'),a.put("templates/dbnext-payment-advice-notes/0.0.12/elements/widget/payment-advice-notes-widgetElementViewContent.html",'<div class="widget-content"><span class="widget-name">{{item.paymentAdviceNoteBranch}}</span><div><eb-item-property label="db.payment.advice.notes.dashboard.widget.amount" class="widget-summary value-left"><eb-amount amount="item.amount" currency="{{item.currency}}"></eb-amount></eb-item-property><eb-item-property label="db.payment.advice.notes.dashboard.widget.realization_date" class="widget-summary big-value value-right">{{item.realizationDate | amDateFormat : \'DD.MM.YYYY\' | emptyFilter}}</eb-item-property></div></div>'),a.put("templates/dbnext-payment-advice-notes/0.0.12/views/paymentAdviceNotesContent.html",'<eb-mini-bar ng-hide="details" search-text="filterOptions.paymentAdviceNoteBranch" eb-search-placeholder="{{::\'db.payment.advice.notes.content.filter.placecholder\'|translate}}" eb-disable-more="true" add-url="de.payment-advice-notes.new.form" add-icon-name="eb-ico-widget-payments" add-title="{{::\'db.payment.advice.notes.content.button.new_payment_advice_note\'|translate}}" add-widget-name="payment-advice-notes"></eb-mini-bar><db-tabs eb-model="filterParams.paymentAdviceNoteStatus" eb-tabs="tabs" ng-hide="details"></db-tabs><div ui-view autoscroll="true" ng-class="anim_class" ng-swipe-left="emitTabChange(\'left\')" ng-swipe-right="emitTabChange(\'right\')" class="animate-on"></div>'),a.put("templates/dbnext-payment-advice-notes/0.0.12/views/paymentAdviceNotesContentTab.html",'<div eb-themable><eb-list class="payments time-based-list" eb-promise="paymentAdviceNotesListPromise"><div eb-list-item class="row" ng-repeat="paymentAdviceNote in paymentAdviceNotesList.content | filter:{wrappedText : filterOptions.paymentAdviceNoteBranch}"><eb-list-item-content class="item-content-with-actions"><div class="date-cell cell_1_in_3"><span>{{paymentAdviceNote.realizationDate | dateFilter | emptyFilter}}</span></div><!-- no whitespace fix--><div class="actions-cell"><div class="default-desktop-option"><a ui-sref="^.details" store-context="paymentAdviceNote"><span eb-msg="db.payments.templates.list.options.details"></span></a></div><div class="options" ng-class="{\'options-hidden-when-desktop\': true, \'no-desktop-options\': true}"><div eb-list-options><li class="option-hidden-when-desktop"><a class="option-row" ui-sref="^.details" store-context="paymentAdviceNote"><span eb-themable class="eb-icon eb-ico-details options-icon"></span> <span class="option-label" eb-msg="db.payments.templates.list.options.details"></span></a></li></div></div></div><!-- no whitespace fix--><div class="amount-property-cell cell_3_in_3"><eb-amount amount="paymentAdviceNote.amount" currency="{{paymentAdviceNote.currency}}"></eb-amount></div><!-- no whitespace fix--><div class="description-property-cell cell_2_in_3"><div class="collapsed-recipient-name">{{paymentAdviceNote.paymentAdviceNoteBranch}}</div></div></eb-list-item-content><eb-collapse is-collapsed="paymentAdviceNote.isCollapsed"><eb-list-details><eb-list-details-item key="db.payment.advice.notes.content.list.collapse.payment_advice_date" class="payment-type-label payment-type-label-top"><div>{{paymentAdviceNote.paymentAdviceEntryDate | dateFilter | emptyFilter}}</div></eb-list-details-item><eb-list-details-item key="db.payment.advice.notes.content.list.collapse.account" class="payment-type-label payment-type-label-top"><eb-account-number nrb="{{paymentAdviceNote.accountNo}}"></eb-account-number></eb-list-details-item></eb-list-details></eb-collapse></div><div class="miniapp-empty-list" ng-if="paymentAdviceNotesList.content.length == 0 || paymentAdviceNotesList.summary[0].length == 0">{{::"db.payments.content.list.empty"|translate}}</div><div class="miniapp-empty-list" ng-if="paymentAdviceNotesList.length == 0">{{::"db.payments.list_data_error"|translate}}</div></eb-list><div ng-show="paymentAdviceNotesListPromise.$$state.status === 1"><eb-pagination eb-data="paymentAdviceNotesList" eb-params="filterParams" eb-loading="loading" eb-pagination-count="5" scroll-to="paymentListId" callback="submit(ctx, params, rel)"></eb-pagination></div></div>'),a.put("templates/dbnext-payment-advice-notes/0.0.12/views/paymentAdviceNotesDetails.html",'<div eb-themable><div><eb-section-header eb-header="{{\'db.payment.advice.note.details.section_header.header\'|translate}}" back-state="{{currentTabState.stateName}}"></eb-section-header><div class="details-body" ng-if="details != null"><eb-responsive-row label="db.payment.advice.note.details.account">{{details.accountNo | nrbIbanFilter | emptyFilter}}</eb-responsive-row><eb-responsive-row label="db.payment.advice.note.details.amount"><eb-amount amount="details.amount" currency="{{ details.currency}}"></eb-amount></eb-responsive-row><eb-responsive-row label="db.payment.advice.note.details.payment_advice_place">{{details.paymentAdviceNoteBranch}}</eb-responsive-row><eb-responsive-row label="db.payment.advice.note.details.realization_date">{{details.realizationDate | dateFilter | emptyFilter}}</eb-responsive-row><eb-responsive-row label="db.payment.advice.note.details.payment_advice_date">{{details.paymentAdviceEntryDate | dateFilter | emptyFilter}}</eb-responsive-row></div></div></div>'),a.put("templates/dbnext-payment-advice-notes/0.0.12/views/paymentAdviceNotesNew.html",'<div class="inner-payment-form center-app-header"><eb-content-navigation></eb-content-navigation><form name="paymentAdviceNoteForm" novalidate ng-submit="submit(paymentAdviceNoteForm)"><div><div id="form-views" ui-view autoscroll="true"></div></div></form></div>'),a.put("templates/dbnext-payment-advice-notes/0.0.12/views/paymentAdviceNotesNewAccept.html",'<div eb-themable class="step2 inner-form-padding center-form"><div class="panel-details"><div eb-section-header ng-show="!isEditMode && !headerTitleKey" eb-header="db.payment.advice.note.new.accept.section_header.header" back-state="{{currentTabState.stateName}}"></div><div eb-section-header ng-show="isEditMode && !headerTitleKey" eb-header="db.payment.advice.note.new.accept.section_header.edit_header" back-state="de.cart.content"></div><div eb-section-header ng-show="headerTitleKey" eb-header="{{headerTitleKey}}" back-state="{{backState}}"></div><div ng-show="paymentAdviceNotePromise.$$state.status === 1"><div class="form-body payments-accept"><div ui-view><eb-responsive-row label="db.payment.advice.note.new.accept.account">{{details.accountNo | nrbIbanFilter | emptyFilter}}</eb-responsive-row><eb-responsive-row class="new-pan-step2-amount" label="db.payment.advice.note.new.accept.amount"><eb-amount amount="details.amount" currency="{{ details.currency}}"></eb-amount></eb-responsive-row><eb-responsive-row label="db.payment.advice.note.new.accept.payment_advice_place">{{details.paymentAdviceNoteBranch}}</eb-responsive-row><eb-responsive-row label="db.payment.advice.note.new.accept.realization_date">{{details.realizationDate | dateFilter | emptyFilter}}</eb-responsive-row><eb-responsive-row label="db.payment.advice.note.new.accept.payment_advice_date">{{details.paymentAdviceEntryDate | dateFilter | emptyFilter}}</eb-responsive-row></div></div><div class="shaded-section"><form name="authForm" novalidate><div ng-if="!isCartIntent" eb-authorization eb-model="auth" eb-disposition-id="details.paymentAdviceNoteId" eb-resource-type="payment_advice_note" eb-relation="accept_payment_advice_note" eb-error-code="{{errorCode}}" eb-text="text" eb-form="authForm" is-shown="isAuthorization" eb-show-sms-auth-no="true" eb-disabled="false" eb-required="true"></div><div eb-action-footer ng-if="!isCartIntent && !fromCart" cancel-label="db.payment.advice.note.new.accept.action_footer.cancel_label" submit-label="db.payment.advice.note.new.accept.action_footer.submit_label" cancel-action="change()" submit-action="accept(authForm)"><!--<div eb-cart-insert submit="save()"></div>--></div><!--<div eb-action-footer ng-if="isCartIntent && !fromCart" cancel-label="db.payment.advice.note.new.accept.action_footer.cart_cancel_label" submit-label="db.payment.advice.note.new.accept.action_footer.cart_submit_label" cancel-action="change()" submit-action="save()"></div>--><!--<div eb-action-footer ng-if="fromCart" submit-label="db.payment.advice.note.new.accept.action_footer.submit_label" submit-action="accept(authForm)"></div>--></form></div></div></div><div eb-preloader eb-promise="paymentAdviceNotePromise" class="eb-preloader-default" eb-rejected-message="{{::\'db.payments.accept.rejected_response\'|translate}}"></div></div>'),a.put("templates/dbnext-payment-advice-notes/0.0.12/views/paymentAdviceNotesNewForm.html",'<div><div class="inner-form-padding center-form"><div eb-themable><eb-section-header eb-header="db.payment.advice.note.new.form.header" back-state="{{currentTabState.stateName}}"></eb-section-header><div class="form-body advice-notes-form-padding"><div eb-responsive-row label="db.payment.advice.note.new.form.row.sender_account"><div eb-account-select name="accountId" ng-model="formData.formModel.accountId" primary-account-number="primaryAccount" account="formData.remitterAccount" placeholder="{{::\'db.payment.advice.note.new.form.row.account_select.placeholder\'|translate}}" ng-required="true"></div><div eb-validation-messages eb-name="accountId"><div eb-message-key="required"><span eb-msg="db.payment.advice.note.new.form.row.account_select.validate"></span></div><div eb-message-key="contract.contractId.no.permission"><span eb-msg="db.payment.advice.note.new.form.row.account_select.validate.passive_access"></span></div><div eb-message-key="payment_advice_note.accountId.error.lack.of.access.in.active.mode"><span eb-msg="db.payment.advice.note.new.form.row.account_select.validate.passive_access"></span></div></div></div><div eb-responsive-row label="db.payment.advice.note.new.form.row.amount" label-for="amount"><div eb-input-amount eb-name="amount" eb-min-amount="minimalAmount" eb-min-amount-msg="{{getMinimalAmountMsg()}}" eb-missing-amount-msg="{{::\'db.payment.advice.note.new.form.row.amount.validate.required\' | translate}}" eb-currency-model="{{formData.remitterAccount.currency}}" withdrawal ng-currency-model="formData.formModel.currency" eb-currency-name="currency" ng-model="formData.formModel.amount" eb-form="paymentAdviceNoteForm" account-id="{{formData.remitterAccount.accountId}}" eb-required="true" eb-currency-required="true"></div><div eb-validation-messages eb-name="amount"><div eb-message-key="payment_advice_note.amount.error.amount.not.exceed.minimal.amount"><span eb-msg="db.payment.advice.note.new.form.row.amount.validate.minimal"></span></div><div eb-message-key="transfer_order.amount.DecimalMin"><span eb-msg="db.payments.new.form.row.amount.validate.decimal_min"></span></div><div eb-message-key="transfer_order.amount.DecimalMax"><span eb-msg="db.payments.new.form.row.amount.validate.decimal_max"></span></div></div><div eb-validation-messages eb-name="currency"><div eb-message-key="payment_advice_note.currency.NotNull"><span eb-msg="db.payment.advice.note.new.form.row.currency.required"></span></div><div eb-message-key="payment_advice_note.currency.error.invalid.currency.for.payment.advice.note"><span eb-msg="db.payment.advice.note.new.form.row.currency.validate"></span></div></div></div><div collapse="formData.exchangeMessageHidden" class="close-section"><div eb-responsive-row><div eb-checkbox eb-model="formData.exchange" class="exchange-checkbox" eb-name="exchange" eb-required="!formData.exchangeMessageHidden" ng-mouseenter="isCheckboxHover = true" ng-mouseleave="isCheckboxHover = false" ng-class="{\'eb-checkbox-hover\' : isCheckboxHover}"></div><span class="exchange-message" ng-click="formData.exchange=!formData.exchange" eb-msg="db.payment.advice.note.new.form.row.exchange_info" prevent-orphans ng-mouseenter="isCheckboxHover = true" ng-mouseleave="isCheckboxHover = false"></span><div eb-validation-messages eb-name="exchange"><div eb-message-key="required"><span eb-msg="db.payment.advice.note.new.form.row.exchange.validate.required"></span></div></div></div></div><div eb-responsive-row label="db.payment.advice.note.new.form.row.branch"><div db-pmnt-adv-note-branch-select name="branch" id="branch" ng-click="scrollTop()" ng-model="formData.formModel.paymentAdviceNoteBranchId" ng-required="true" placeholder="{{::\'db.payment.advice.note.new.form.row.branch.placeholder\'|translate}}"></div><eb-validation-messages eb-name="branch"><div eb-message-key="required"><span eb-msg="db.payment.advice.note.new.form.row.branch.validate.required"></span></div></eb-validation-messages></div><div eb-responsive-row label="db.payment.advice.note.new.form.row.realisation_date"><div eb-date-input ng-model="formData.formModel.realizationDate" eb-title="{{::\'db.payment.advice.note.new.form.row.realisation_date.placeholder\'|translate}}" date-format="dd.MM.yyyy" eb-min-date="paymentAdviceNoteConditions.minimalDate" eb-max-date="paymentAdviceNoteConditions.maximalDate" name="paymentDate" eb-disable-weekend="false" eb-disable-past-dates="true" ng-required="true" date-input-validation-past></div><div class="messages animate-on" ng-messages="paymentAdviceNoteForm[\'paymentDate\'].$error" ng-if="paymentAdviceNoteForm.$submitted || paymentAdviceNoteForm[\'paymentDate\'].$dirty || ebForm[\'paymentDate\'].$touched"><div ng-message="past"><span>{{minimumDateMsg}}</span></div><div ng-message="minDate"><span>{{minimumDateMsg}}</span></div><div ng-message="maxDate"><span>{{maximumDateMsg}}</span></div></div><div eb-validation-messages eb-name="paymentDate"><div eb-message-key="required"><span eb-msg="db.payment.advice.note.new.form.row.realization_date.validate.required"></span></div><div eb-message-key="format"><span eb-msg="db.payment.advice.note.new.form.row.realization_date.validate.format"></span></div><div eb-message-key="payment_advice_note.realizationDate.error.date.is.free.day"><span eb-msg="db.payment.advice.note.new.form.row.realization_date.is.free.day"></span></div></div></div><div eb-responsive-row><div eb-checkbox eb-model="formData.regulation" class="exchange-checkbox" eb-name="regulation" eb-required="true" ng-mouseenter="isCheckboxHover = true" ng-mouseleave="isCheckboxHover = false" ng-class="{\'eb-checkbox-hover\' : isCheckboxHover}"></div><span class="exchange-message" ng-click="formData.regulation=!formData.regulation" eb-msg="db.payment.advice.note.new.form.row.regulation_info" prevent-orphans ng-mouseenter="isCheckboxHover = true" ng-mouseleave="isCheckboxHover = false"></span><div eb-validation-messages eb-name="regulation"><div eb-message-key="required"><span eb-msg="db.payment.advice.note.new.form.row.regulation.validate.required"></span></div></div></div><eb-action-footer submit-label="db.payment.advice.note.new.form.action_footer.submit_label" submit-icon="eb-ico-widget-payments" submit-action="submit(paymentAdviceNoteForm)"><!--<div eb-cart-insert eb-model="paymentAdviceNoteForm" eb-form="paymentAdviceNoteForm" submit="submit(paymentAdviceNoteForm)" ></div>--></eb-action-footer></div><!-- <div eb-preloader eb-promise="paymentAdviceNoteConditionsPromise" class="eb-preloader-default"></div> --></div></div></div>'),
a.put("templates/dbnext-payment-advice-notes/0.0.12/views/paymentAdviceNotesView.html",'<eb-full-screen-widget miniapp-name="payment-advice-notes"><div class="payment-advice-notes"><div><div><eb-screen-content><div ui-view autoscroll="true"></div></eb-screen-content></div></div></div></eb-full-screen-widget>')}]);